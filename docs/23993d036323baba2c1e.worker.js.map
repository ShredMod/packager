{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/scratch-storage/src/FetchWorkerTool.worker.js","webpack:///./node_modules/scratch-storage/src/safer-fetch.js"],"names":["saferFetchAsArrayBuffer","require","complete","timeoutId","checkCompleted","setTimeout","length","postMessage","slice","map","response","buffer","filter","Boolean","onMessage","data","job","url","options","then","push","id","catch","error","message","self","fetch","support","addEventListener","currentFetches","queue","startNextFetch","resolve","firstError","failedAttempts","attemptToFetch","result","ok","status","arrayBuffer","Promise","reject","checkStartNextFetch","console","warn","cb","Math","random","shift","module","exports"],"mappings":"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","file":"23993d036323baba2c1e.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./node_modules/babel-loader/lib/index.js?!./node_modules/scratch-storage/src/FetchWorkerTool.worker.js\");\n","/* eslint-env worker */\n\nconst saferFetchAsArrayBuffer = require('./safer-fetch');\n\nconst complete = [];\n\nlet timeoutId = null;\n\nconst checkCompleted = () => {\n    if (timeoutId) return;\n    timeoutId = setTimeout(() => {\n        timeoutId = null;\n        if (complete.length) {\n            // Send our chunk of completed requests and instruct postMessage to\n            // transfer the buffers instead of copying them.\n            postMessage(\n                complete.slice(),\n                // Instruct postMessage that these buffers in the sent message\n                // should use their Transferable trait. After the postMessage\n                // call the \"buffers\" will still be in complete if you looked,\n                // but they will all be length 0 as the data they reference has\n                // been sent to the window. This lets us send a lot of data\n                // without the normal postMessage behaviour of making a copy of\n                // all of the data for the window.\n                complete.map(response => response.buffer).filter(Boolean)\n            );\n            complete.length = 0;\n        }\n    });\n};\n\n/**\n * Receive a job from the parent and fetch the requested data.\n * @param {object} options.job A job id, url, and options descriptor to perform.\n */\nconst onMessage = ({data: job}) => {\n    saferFetchAsArrayBuffer(job.url, job.options)\n        .then(buffer => complete.push({id: job.id, buffer}))\n        .catch(error => complete.push({id: job.id, error: (error && error.message) || `Failed request: ${job.url}`}))\n        .then(checkCompleted);\n};\n\nif (self.fetch) {\n    postMessage({support: {fetch: true}});\n    self.addEventListener('message', onMessage);\n} else {\n    postMessage({support: {fetch: false}});\n    self.addEventListener('message', ({data: job}) => {\n        postMessage([{id: job.id, error: 'fetch is unavailable'}]);\n    });\n}\n","/* eslint-env browser */\n/* eslint-disable no-use-before-define */\n\n// This throttles and retries fetch() to mitigate the effect of random network errors and\n// random browser errors (especially in Chrome)\n\nlet currentFetches = 0;\nconst queue = [];\n\nconst startNextFetch = ([resolve, url, options]) => {\n    let firstError;\n    let failedAttempts = 0;\n\n    const attemptToFetch = () => fetch(url, options)\n        .then(result => {\n            // In a macOS WKWebView, requests from file: URLs to other file: URLs always have status: 0 and ok: false\n            // even though the requests were successful. If the requested file doesn't exist, fetch() rejects instead.\n            // We aren't aware of any other cases where fetch() can resolve with status 0, so this should be safe.\n            if (result.ok || result.status === 0) return result.arrayBuffer();\n            if (result.status === 404) return null;\n            return Promise.reject(result.status);\n        })\n        .then(buffer => {\n            currentFetches--;\n            checkStartNextFetch();\n            return buffer;\n        })\n        .catch(error => {\n            if (error === 403) {\n                // Retrying this request will not help, so return an error now.\n                throw error;\n            }\n\n            console.warn(`Attempt to fetch ${url} failed`, error);\n            if (!firstError) {\n                firstError = error;\n            }\n\n            if (failedAttempts < 2) {\n                failedAttempts++;\n                return new Promise(cb => setTimeout(cb, (failedAttempts + Math.random() - 1) * 5000))\n                    .then(attemptToFetch);\n            }\n\n            currentFetches--;\n            checkStartNextFetch();\n            throw firstError;\n        });\n\n    return resolve(attemptToFetch());\n};\n\nconst checkStartNextFetch = () => {\n    if (currentFetches < 100 && queue.length > 0) {\n        currentFetches++;\n        startNextFetch(queue.shift());\n    }\n};\n\nconst saferFetchAsArrayBuffer = (url, options) => new Promise(resolve => {\n    queue.push([resolve, url, options]);\n    checkStartNextFetch();\n});\n\nmodule.exports = saferFetchAsArrayBuffer;\n"],"sourceRoot":""}