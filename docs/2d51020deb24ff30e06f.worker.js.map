{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/scratch-vm/src/extension-support/extension-worker.js","webpack:///./node_modules/microee/index.js","webpack:///./node_modules/minilog/lib/common/filter.js","webpack:///./node_modules/minilog/lib/common/minilog.js","webpack:///./node_modules/minilog/lib/common/transform.js","webpack:///./node_modules/minilog/lib/web/array.js","webpack:///./node_modules/minilog/lib/web/console.js","webpack:///./node_modules/minilog/lib/web/formatters/color.js","webpack:///./node_modules/minilog/lib/web/formatters/minilog.js","webpack:///./node_modules/minilog/lib/web/formatters/util.js","webpack:///./node_modules/minilog/lib/web/index.js","webpack:///./node_modules/minilog/lib/web/jquery_simple.js","webpack:///./node_modules/minilog/lib/web/localstorage.js","webpack:///./node_modules/scratch-vm/src/dispatch/shared-dispatch.js","webpack:///./node_modules/scratch-vm/src/dispatch/worker-dispatch.js","webpack:///./node_modules/scratch-vm/src/extension-support/argument-type.js","webpack:///./node_modules/scratch-vm/src/extension-support/block-type.js","webpack:///./node_modules/scratch-vm/src/extension-support/target-type.js","webpack:///./node_modules/scratch-vm/src/extension-support/tw-extension-api-common.js","webpack:///./node_modules/scratch-vm/src/extension-support/tw-extension-worker-context.js","webpack:///./node_modules/scratch-vm/src/extension-support/tw-scratchx-compatibility-layer.js","webpack:///./node_modules/scratch-vm/src/extension-support/tw-scratchx-utilities.js","webpack:///./node_modules/scratch-vm/src/util/cast.js","webpack:///./node_modules/scratch-vm/src/util/color.js","webpack:///./node_modules/scratch-vm/src/util/log.js","webpack:///(webpack)/buildin/global.js"],"names":["ScratchCommon","require","dispatch","log","isWorker","loadScripts","url","importScripts","Promise","resolve","reject","script","document","createElement","onload","onerror","Error","src","body","appendChild","ExtensionWorker","constructor","nextExtensionId","initialRegistrations","firstRegistrationPromise","firstRegistrationCallback","waitForConnection","then","call","x","id","extension","workerId","all","e","error","extensions","register","extensionObject","extensionId","push","serviceName","promise","setService","global","Scratch","Object","assign","extensionWorker","bind","ScratchExtensions","SharedDispatch","callbacks","nextResponseId","service","method","args","transferCall","transfer","provider","isRemote","_getServiceProvider","_remoteTransferCall","result","apply","_isRemoteService","_remoteCall","responseId","_storeCallbacks","length","func","pop","postMessage","_deliverResponse","message","_onMessage","worker","event","data","_onDispatchMessage","JSON","stringify","module","exports","centralDispatchService","WorkerDispatch","_connectionPromise","_onConnect","services","self","onmessage","hasOwnProperty","warn","setTimeout","close","ArgumentType","ANGLE","BOOLEAN","COLOR","NUMBER","STRING","MATRIX","NOTE","IMAGE","BlockType","BUTTON","COMMAND","CONDITIONAL","EVENT","HAT","LOOP","REPORTER","TargetType","SPRITE","STAGE","Cast","argumentIndexToId","generateExtensionId","parseScratchXBlockType","type","async","isScratchCompatibleValue","v","parseScratchXArgument","argument","defaultValue","hasDefaultValue","split","menuName","menu","wrapScratchXFunction","originalFunction","argumentCount","argumentList","i","convert","name","descriptor","functions","info","displayName","blocks","color1","color2","color3","scratch3Extension","getInfo","_getStatus","docsURI","blockDescriptor","scratchXBlockType","blockText","functionName","defaultArgumentValues","slice","scratchText","argumentInfo","blockTextParts","part","isArgument","argumentIndex","Math","floor","toString","argumentDefaultValue","argumentId","scratch3BlockType","blockInfo","opcode","blockType","text","arguments","menus","scratch3Menus","keys","menuItems","menuInfo","items","extensionNameToExtension","Map","set","getStatus","extensionName","get","status","msg","scratchXName","sanitizedName","replace","toLowerCase","Color","toNumber","value","Number","isNaN","n","toBoolean","Boolean","String","toRgbColorList","color","toRgbColorObject","r","g","b","substring","hexToRgb","a","decimalToRgb","isWhiteSpace","val","trim","compare","v1","v2","n1","n2","NaN","s1","s2","Infinity","isInt","indexOf","LIST_INVALID","LIST_ALL","toListIndex","index","acceptAll","random","RGB_BLACK","RGB_WHITE","decimalToHex","decimal","hex","substr","startsWith","parsed","parseInt","rgbToHex","rgb","rgbToDecimal","hexToDecimal","hsvToRgb","hsv","h","s","max","min","f","p","q","t","rgbToHsv","mixRgb","rgb0","rgb1","fraction1","fraction0","minilog","enable"],"mappings":"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;;;;;ACjBA,gBAAgB,mBAAO,CAAC,iFAA2B;AACnD,YAAY,mBAAO,CAAC,oEAAW;AAC/B,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,0BAA0B;;AAE1B;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD,GAAG;AACH,+BAA+B;AAC/B;AACA;;AAEA;;;;;;;;;;;;ACnBA,cAAc,mBAAO,CAAC,0EAAsB;;AAE5C;AACA;AACA;AACA,cAAc,mBAAO,CAAC,+DAAc;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,+DAA+D,EAAE;AACxE;AACA;;AAEA;AACA;AACA,OAAO,4CAA4C,EAAE;AACrD;AACA;;AAEA;;AAEA;AACA,SAAS,mBAAO,CAAC,2DAAY;AAC7B;AACA,gBAAgB,mBAAO,CAAC,yEAAmB;AAC3C,UAAU,mBAAO,CAAC,2EAAoB;AACtC;;;;;;;;;;;;ACzCA,gBAAgB,mBAAO,CAAC,8EAAwB;;AAEhD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,aAAa;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA,OAAO,WAAW;AAClB;AACA;AACA,mCAAmC,aAAa;AAChD;AACA,KAAK;AACL,sDAAsD,WAAW;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,2BAA2B,+BAA+B,EAAE;AAC5D;AACA;;AAEA;;;;;;;;;;;;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","file":"2d51020deb24ff30e06f.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./node_modules/babel-loader/lib/index.js?!./node_modules/scratch-vm/src/extension-support/extension-worker.js\");\n","/* eslint-env worker */\n\nconst ScratchCommon = require('./tw-extension-api-common');\nconst dispatch = require('../dispatch/worker-dispatch');\nconst log = require('../util/log');\nconst {isWorker} = require('./tw-extension-worker-context');\n\nconst loadScripts = url => {\n    if (isWorker) {\n        importScripts(url);\n    } else {\n        return new Promise((resolve, reject) => {\n            const script = document.createElement('script');\n            script.onload = () => resolve();\n            script.onerror = () => {\n                reject(new Error(`Error in sandboxed script: ${url}. Check the console for more information.`));\n            };\n            script.src = url;\n            document.body.appendChild(script);\n        });\n    }\n};\n\nclass ExtensionWorker {\n    constructor () {\n        this.nextExtensionId = 0;\n\n        this.initialRegistrations = [];\n\n        this.firstRegistrationPromise = new Promise(resolve => {\n            this.firstRegistrationCallback = resolve;\n        });\n\n        dispatch.waitForConnection.then(() => {\n            dispatch.call('extensions', 'allocateWorker').then(async x => {\n                const [id, extension] = x;\n                this.workerId = id;\n\n                try {\n                    await loadScripts(extension);\n                    await this.firstRegistrationPromise;\n\n                    const initialRegistrations = this.initialRegistrations;\n                    this.initialRegistrations = null;\n\n                    Promise.all(initialRegistrations).then(() => dispatch.call('extensions', 'onWorkerInit', id));\n                } catch (e) {\n                    log.error(e);\n                    dispatch.call('extensions', 'onWorkerInit', id, `${e}`);\n                }\n            });\n        });\n\n        this.extensions = [];\n    }\n\n    register (extensionObject) {\n        const extensionId = this.nextExtensionId++;\n        this.extensions.push(extensionObject);\n        const serviceName = `extension.${this.workerId}.${extensionId}`;\n        const promise = dispatch.setService(serviceName, extensionObject)\n            .then(() => dispatch.call('extensions', 'registerExtensionService', serviceName));\n        if (this.initialRegistrations) {\n            this.firstRegistrationCallback();\n            this.initialRegistrations.push(promise);\n        }\n        return promise;\n    }\n}\n\nglobal.Scratch = global.Scratch || {};\nObject.assign(global.Scratch, ScratchCommon);\n\n/**\n * Expose only specific parts of the worker to extensions.\n */\nconst extensionWorker = new ExtensionWorker();\nglobal.Scratch.extensions = {\n    register: extensionWorker.register.bind(extensionWorker)\n};\n\nglobal.ScratchExtensions = require('./tw-scratchx-compatibility-layer');\n","function M() { this._events = {}; }\nM.prototype = {\n  on: function(ev, cb) {\n    this._events || (this._events = {});\n    var e = this._events;\n    (e[ev] || (e[ev] = [])).push(cb);\n    return this;\n  },\n  removeListener: function(ev, cb) {\n    var e = this._events[ev] || [], i;\n    for(i = e.length-1; i >= 0 && e[i]; i--){\n      if(e[i] === cb || e[i].cb === cb) { e.splice(i, 1); }\n    }\n  },\n  removeAllListeners: function(ev) {\n    if(!ev) { this._events = {}; }\n    else { this._events[ev] && (this._events[ev] = []); }\n  },\n  listeners: function(ev) {\n    return (this._events ? this._events[ev] || [] : []);\n  },\n  emit: function(ev) {\n    this._events || (this._events = {});\n    var args = Array.prototype.slice.call(arguments, 1), i, e = this._events[ev] || [];\n    for(i = e.length-1; i >= 0 && e[i]; i--){\n      e[i].apply(this, args);\n    }\n    return this;\n  },\n  when: function(ev, cb) {\n    return this.once(ev, cb, true);\n  },\n  once: function(ev, cb, when) {\n    if(!cb) return this;\n    function c() {\n      if(!when) this.removeListener(ev, c);\n      if(cb.apply(this, arguments) && when) this.removeListener(ev, c);\n    }\n    c.cb = cb;\n    this.on(ev, c);\n    return this;\n  }\n};\nM.mixin = function(dest) {\n  var o = M.prototype, k;\n  for (k in o) {\n    o.hasOwnProperty(k) && (dest.prototype[k] = o[k]);\n  }\n};\nmodule.exports = M;\n","// default filter\nvar Transform = require('./transform.js');\n\nvar levelMap = { debug: 1, info: 2, warn: 3, error: 4 };\n\nfunction Filter() {\n  this.enabled = true;\n  this.defaultResult = true;\n  this.clear();\n}\n\nTransform.mixin(Filter);\n\n// allow all matching, with level >= given level\nFilter.prototype.allow = function(name, level) {\n  this._white.push({ n: name, l: levelMap[level] });\n  return this;\n};\n\n// deny all matching, with level <= given level\nFilter.prototype.deny = function(name, level) {\n  this._black.push({ n: name, l: levelMap[level] });\n  return this;\n};\n\nFilter.prototype.clear = function() {\n  this._white = [];\n  this._black = [];\n  return this;\n};\n\nfunction test(rule, name) {\n  // use .test for RegExps\n  return (rule.n.test ? rule.n.test(name) : rule.n == name);\n};\n\nFilter.prototype.test = function(name, level) {\n  var i, len = Math.max(this._white.length, this._black.length);\n  for(i = 0; i < len; i++) {\n    if(this._white[i] && test(this._white[i], name) && levelMap[level] >= this._white[i].l) {\n      return true;\n    }\n    if(this._black[i] && test(this._black[i], name) && levelMap[level] <= this._black[i].l) {\n      return false;\n    }\n  }\n  return this.defaultResult;\n};\n\nFilter.prototype.write = function(name, level, args) {\n  if(!this.enabled || this.test(name, level)) {\n    return this.emit('item', name, level, args);\n  }\n};\n\nmodule.exports = Filter;\n","var Transform = require('./transform.js'),\n    Filter = require('./filter.js');\n\nvar log = new Transform(),\n    slice = Array.prototype.slice;\n\nexports = module.exports = function create(name) {\n  var o   = function() { log.write(name, undefined, slice.call(arguments)); return o; };\n  o.debug = function() { log.write(name, 'debug', slice.call(arguments)); return o; };\n  o.info  = function() { log.write(name, 'info',  slice.call(arguments)); return o; };\n  o.warn  = function() { log.write(name, 'warn',  slice.call(arguments)); return o; };\n  o.error = function() { log.write(name, 'error', slice.call(arguments)); return o; };\n  o.log   = o.debug; // for interface compliance with Node and browser consoles\n  o.suggest = exports.suggest;\n  o.format = log.format;\n  return o;\n};\n\n// filled in separately\nexports.defaultBackend = exports.defaultFormatter = null;\n\nexports.pipe = function(dest) {\n  return log.pipe(dest);\n};\n\nexports.end = exports.unpipe = exports.disable = function(from) {\n  return log.unpipe(from);\n};\n\nexports.Transform = Transform;\nexports.Filter = Filter;\n// this is the default filter that's applied when .enable() is called normally\n// you can bypass it completely and set up your own pipes\nexports.suggest = new Filter();\n\nexports.enable = function() {\n  if(exports.defaultFormatter) {\n    return log.pipe(exports.suggest) // filter\n              .pipe(exports.defaultFormatter) // formatter\n              .pipe(exports.defaultBackend); // backend\n  }\n  return log.pipe(exports.suggest) // filter\n            .pipe(exports.defaultBackend); // formatter\n};\n\n","var microee = require('microee');\n\n// Implements a subset of Node's stream.Transform - in a cross-platform manner.\nfunction Transform() {}\n\nmicroee.mixin(Transform);\n\n// The write() signature is different from Node's\n// --> makes it much easier to work with objects in logs.\n// One of the lessons from v1 was that it's better to target\n// a good browser rather than the lowest common denominator\n// internally.\n// If you want to use external streams, pipe() to ./stringify.js first.\nTransform.prototype.write = function(name, level, args) {\n  this.emit('item', name, level, args);\n};\n\nTransform.prototype.end = function() {\n  this.emit('end');\n  this.removeAllListeners();\n};\n\nTransform.prototype.pipe = function(dest) {\n  var s = this;\n  // prevent double piping\n  s.emit('unpipe', dest);\n  // tell the dest that it's being piped to\n  dest.emit('pipe', s);\n\n  function onItem() {\n    dest.write.apply(dest, Array.prototype.slice.call(arguments));\n  }\n  function onEnd() { !dest._isStdio && dest.end(); }\n\n  s.on('item', onItem);\n  s.on('end', onEnd);\n\n  s.when('unpipe', function(from) {\n    var match = (from === dest) || typeof from == 'undefined';\n    if(match) {\n      s.removeListener('item', onItem);\n      s.removeListener('end', onEnd);\n      dest.emit('unpipe');\n    }\n    return match;\n  });\n\n  return dest;\n};\n\nTransform.prototype.unpipe = function(from) {\n  this.emit('unpipe', from);\n  return this;\n};\n\nTransform.prototype.format = function(dest) {\n  throw new Error([\n    'Warning: .format() is deprecated in Minilog v2! Use .pipe() instead. For example:',\n    'var Minilog = require(\\'minilog\\');',\n    'Minilog',\n    '  .pipe(Minilog.backends.console.formatClean)',\n    '  .pipe(Minilog.backends.console);'].join('\\n'));\n};\n\nTransform.mixin = function(dest) {\n  var o = Transform.prototype, k;\n  for (k in o) {\n    o.hasOwnProperty(k) && (dest.prototype[k] = o[k]);\n  }\n};\n\nmodule.exports = Transform;\n","var Transform = require('../common/transform.js'),\n    cache = [ ];\n\nvar logger = new Transform();\n\nlogger.write = function(name, level, args) {\n  cache.push([ name, level, args ]);\n};\n\n// utility functions\nlogger.get = function() { return cache; };\nlogger.empty = function() { cache = []; };\n\nmodule.exports = logger;\n","var Transform = require('../common/transform.js');\n\nvar newlines = /\\n+$/,\n    logger = new Transform();\n\nlogger.write = function(name, level, args) {\n  var i = args.length-1;\n  if (typeof console === 'undefined' || !console.log) {\n    return;\n  }\n  if(console.log.apply) {\n    return console.log.apply(console, [name, level].concat(args));\n  } else if(JSON && JSON.stringify) {\n    // console.log.apply is undefined in IE8 and IE9\n    // for IE8/9: make console.log at least a bit less awful\n    if(args[i] && typeof args[i] == 'string') {\n      args[i] = args[i].replace(newlines, '');\n    }\n    try {\n      for(i = 0; i < args.length; i++) {\n        args[i] = JSON.stringify(args[i]);\n      }\n    } catch(e) {}\n    console.log(args.join(' '));\n  }\n};\n\nlogger.formatters = ['color', 'minilog'];\nlogger.color = require('./formatters/color.js');\nlogger.minilog = require('./formatters/minilog.js');\n\nmodule.exports = logger;\n","var Transform = require('../../common/transform.js'),\n    color = require('./util.js');\n\nvar colors = { debug: ['cyan'], info: ['purple' ], warn: [ 'yellow', true ], error: [ 'red', true ] },\n    logger = new Transform();\n\nlogger.write = function(name, level, args) {\n  var fn = console.log;\n  if(console[level] && console[level].apply) {\n    fn = console[level];\n    fn.apply(console, [ '%c'+name+' %c'+level, color('gray'), color.apply(color, colors[level])].concat(args));\n  }\n};\n\n// NOP, because piping the formatted logs can only cause trouble.\nlogger.pipe = function() { };\n\nmodule.exports = logger;\n","var Transform = require('../../common/transform.js'),\n    color = require('./util.js'),\n    colors = { debug: ['gray'], info: ['purple' ], warn: [ 'yellow', true ], error: [ 'red', true ] },\n    logger = new Transform();\n\nlogger.write = function(name, level, args) {\n  var fn = console.log;\n  if(level != 'debug' && console[level]) {\n    fn = console[level];\n  }\n\n  var subset = [], i = 0;\n  if(level != 'info') {\n    for(; i < args.length; i++) {\n      if(typeof args[i] != 'string') break;\n    }\n    fn.apply(console, [ '%c'+name +' '+ args.slice(0, i).join(' '), color.apply(color, colors[level]) ].concat(args.slice(i)));\n  } else {\n    fn.apply(console, [ '%c'+name, color.apply(color, colors[level]) ].concat(args));\n  }\n};\n\n// NOP, because piping the formatted logs can only cause trouble.\nlogger.pipe = function() { };\n\nmodule.exports = logger;\n","var hex = {\n  black: '#000',\n  red: '#c23621',\n  green: '#25bc26',\n  yellow: '#bbbb00',\n  blue:  '#492ee1',\n  magenta: '#d338d3',\n  cyan: '#33bbc8',\n  gray: '#808080',\n  purple: '#708'\n};\nfunction color(fg, isInverse) {\n  if(isInverse) {\n    return 'color: #fff; background: '+hex[fg]+';';\n  } else {\n    return 'color: '+hex[fg]+';';\n  }\n}\n\nmodule.exports = color;\n","var Minilog = require('../common/minilog.js');\n\nvar oldEnable = Minilog.enable,\n    oldDisable = Minilog.disable,\n    isChrome = (typeof navigator != 'undefined' && /chrome/i.test(navigator.userAgent)),\n    console = require('./console.js');\n\n// Use a more capable logging backend if on Chrome\nMinilog.defaultBackend = (isChrome ? console.minilog : console);\n\n// apply enable inputs from localStorage and from the URL\nif(typeof window != 'undefined') {\n  try {\n    Minilog.enable(JSON.parse(window.localStorage['minilogSettings']));\n  } catch(e) {}\n  if(window.location && window.location.search) {\n    var match = RegExp('[?&]minilog=([^&]*)').exec(window.location.search);\n    match && Minilog.enable(decodeURIComponent(match[1]));\n  }\n}\n\n// Make enable also add to localStorage\nMinilog.enable = function() {\n  oldEnable.call(Minilog, true);\n  try { window.localStorage['minilogSettings'] = JSON.stringify(true); } catch(e) {}\n  return this;\n};\n\nMinilog.disable = function() {\n  oldDisable.call(Minilog);\n  try { delete window.localStorage.minilogSettings; } catch(e) {}\n  return this;\n};\n\nexports = module.exports = Minilog;\n\nexports.backends = {\n  array: require('./array.js'),\n  browser: Minilog.defaultBackend,\n  localStorage: require('./localstorage.js'),\n  jQuery: require('./jquery_simple.js')\n};\n","var Transform = require('../common/transform.js');\n\nvar cid = new Date().valueOf().toString(36);\n\nfunction AjaxLogger(options) {\n  this.url = options.url || '';\n  this.cache = [];\n  this.timer = null;\n  this.interval = options.interval || 30*1000;\n  this.enabled = true;\n  this.jQuery = window.jQuery;\n  this.extras = {};\n}\n\nTransform.mixin(AjaxLogger);\n\nAjaxLogger.prototype.write = function(name, level, args) {\n  if(!this.timer) { this.init(); }\n  this.cache.push([name, level].concat(args));\n};\n\nAjaxLogger.prototype.init = function() {\n  if(!this.enabled || !this.jQuery) return;\n  var self = this;\n  this.timer = setTimeout(function() {\n    var i, logs = [], ajaxData, url = self.url;\n    if(self.cache.length == 0) return self.init();\n    // Test each log line and only log the ones that are valid (e.g. don't have circular references).\n    // Slight performance hit but benefit is we log all valid lines.\n    for(i = 0; i < self.cache.length; i++) {\n      try {\n        JSON.stringify(self.cache[i]);\n        logs.push(self.cache[i]);\n      } catch(e) { }\n    }\n    if(self.jQuery.isEmptyObject(self.extras)) {\n        ajaxData = JSON.stringify({ logs: logs });\n        url = self.url + '?client_id=' + cid;\n    } else {\n        ajaxData = JSON.stringify(self.jQuery.extend({logs: logs}, self.extras));\n    }\n\n    self.jQuery.ajax(url, {\n      type: 'POST',\n      cache: false,\n      processData: false,\n      data: ajaxData,\n      contentType: 'application/json',\n      timeout: 10000\n    }).success(function(data, status, jqxhr) {\n      if(data.interval) {\n        self.interval = Math.max(1000, data.interval);\n      }\n    }).error(function() {\n      self.interval = 30000;\n    }).always(function() {\n      self.init();\n    });\n    self.cache = [];\n  }, this.interval);\n};\n\nAjaxLogger.prototype.end = function() {};\n\n// wait until jQuery is defined. Useful if you don't control the load order.\nAjaxLogger.jQueryWait = function(onDone) {\n  if(typeof window !== 'undefined' && (window.jQuery || window.$)) {\n    return onDone(window.jQuery || window.$);\n  } else if (typeof window !== 'undefined') {\n    setTimeout(function() { AjaxLogger.jQueryWait(onDone); }, 200);\n  }\n};\n\nmodule.exports = AjaxLogger;\n","var Transform = require('../common/transform.js'),\n    cache = false;\n\nvar logger = new Transform();\n\nlogger.write = function(name, level, args) {\n  if(typeof window == 'undefined' || typeof JSON == 'undefined' || !JSON.stringify || !JSON.parse) return;\n  try {\n    if(!cache) { cache = (window.localStorage.minilog ? JSON.parse(window.localStorage.minilog) : []); }\n    cache.push([ new Date().toString(), name, level, args ]);\n    window.localStorage.minilog = JSON.stringify(cache);\n  } catch(e) {}\n};\n\nmodule.exports = logger;","const log = require('../util/log');\n\n/**\n * @typedef {object} DispatchCallMessage - a message to the dispatch system representing a service method call\n * @property {*} responseId - send a response message with this response ID. See {@link DispatchResponseMessage}\n * @property {string} service - the name of the service to be called\n * @property {string} method - the name of the method to be called\n * @property {Array|undefined} args - the arguments to be passed to the method\n */\n\n/**\n * @typedef {object} DispatchResponseMessage - a message to the dispatch system representing the results of a call\n * @property {*} responseId - a copy of the response ID from the call which generated this response\n * @property {*|undefined} error - if this is truthy, then it contains results from a failed call (such as an exception)\n * @property {*|undefined} result - if error is not truthy, then this contains the return value of the call (if any)\n */\n\n/**\n * @typedef {DispatchCallMessage|DispatchResponseMessage} DispatchMessage\n * Any message to the dispatch system.\n */\n\n/**\n * The SharedDispatch class is responsible for dispatch features shared by\n * {@link CentralDispatch} and {@link WorkerDispatch}.\n */\nclass SharedDispatch {\n    constructor () {\n        /**\n         * List of callback registrations for promises waiting for a response from a call to a service on another\n         * worker. A callback registration is an array of [resolve,reject] Promise functions.\n         * Calls to local services don't enter this list.\n         * @type {Array.<Function[]>}\n         */\n        this.callbacks = [];\n\n        /**\n         * The next response ID to be used.\n         * @type {int}\n         */\n        this.nextResponseId = 0;\n    }\n\n    /**\n     * Call a particular method on a particular service, regardless of whether that service is provided locally or on\n     * a worker. If the service is provided by a worker, the `args` will be copied using the Structured Clone\n     * algorithm, except for any items which are also in the `transfer` list. Ownership of those items will be\n     * transferred to the worker, and they should not be used after this call.\n     * @example\n     *      dispatcher.call('vm', 'setData', 'cat', 42);\n     *      // this finds the worker for the 'vm' service, then on that worker calls:\n     *      vm.setData('cat', 42);\n     * @param {string} service - the name of the service.\n     * @param {string} method - the name of the method.\n     * @param {*} [args] - the arguments to be copied to the method, if any.\n     * @returns {Promise} - a promise for the return value of the service method.\n     */\n    call (service, method, ...args) {\n        return this.transferCall(service, method, null, ...args);\n    }\n\n    /**\n     * Call a particular method on a particular service, regardless of whether that service is provided locally or on\n     * a worker. If the service is provided by a worker, the `args` will be copied using the Structured Clone\n     * algorithm, except for any items which are also in the `transfer` list. Ownership of those items will be\n     * transferred to the worker, and they should not be used after this call.\n     * @example\n     *      dispatcher.transferCall('vm', 'setData', [myArrayBuffer], 'cat', myArrayBuffer);\n     *      // this finds the worker for the 'vm' service, transfers `myArrayBuffer` to it, then on that worker calls:\n     *      vm.setData('cat', myArrayBuffer);\n     * @param {string} service - the name of the service.\n     * @param {string} method - the name of the method.\n     * @param {Array} [transfer] - objects to be transferred instead of copied. Must be present in `args` to be useful.\n     * @param {*} [args] - the arguments to be copied to the method, if any.\n     * @returns {Promise} - a promise for the return value of the service method.\n     */\n    transferCall (service, method, transfer, ...args) {\n        try {\n            const {provider, isRemote} = this._getServiceProvider(service);\n            if (provider) {\n                if (isRemote) {\n                    return this._remoteTransferCall(provider, service, method, transfer, ...args);\n                }\n\n                const result = provider[method].apply(provider, args);\n                return Promise.resolve(result);\n            }\n            return Promise.reject(new Error(`Service not found: ${service}`));\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Check if a particular service lives on another worker.\n     * @param {string} service - the service to check.\n     * @returns {boolean} - true if the service is remote (calls must cross a Worker boundary), false otherwise.\n     * @private\n     */\n    _isRemoteService (service) {\n        return this._getServiceProvider(service).isRemote;\n    }\n\n    /**\n     * Like {@link call}, but force the call to be posted through a particular communication channel.\n     * @param {object} provider - send the call through this object's `postMessage` function.\n     * @param {string} service - the name of the service.\n     * @param {string} method - the name of the method.\n     * @param {*} [args] - the arguments to be copied to the method, if any.\n     * @returns {Promise} - a promise for the return value of the service method.\n     */\n    _remoteCall (provider, service, method, ...args) {\n        return this._remoteTransferCall(provider, service, method, null, ...args);\n    }\n\n    /**\n     * Like {@link transferCall}, but force the call to be posted through a particular communication channel.\n     * @param {object} provider - send the call through this object's `postMessage` function.\n     * @param {string} service - the name of the service.\n     * @param {string} method - the name of the method.\n     * @param {Array} [transfer] - objects to be transferred instead of copied. Must be present in `args` to be useful.\n     * @param {*} [args] - the arguments to be copied to the method, if any.\n     * @returns {Promise} - a promise for the return value of the service method.\n     */\n    _remoteTransferCall (provider, service, method, transfer, ...args) {\n        return new Promise((resolve, reject) => {\n            const responseId = this._storeCallbacks(resolve, reject);\n\n            /** @TODO: remove this hack! this is just here so we don't try to send `util` to a worker */\n            // tw: upstream's logic is broken\n            // Args is actually a 3 length list of [args, util, real block info]\n            // We only want to send args. The others will throw errors when they try to be cloned\n            if ((args.length > 0) && (typeof args[args.length - 1].func === 'function')) {\n                args.pop();\n                args.pop();\n            }\n\n            if (transfer) {\n                provider.postMessage({service, method, responseId, args}, transfer);\n            } else {\n                provider.postMessage({service, method, responseId, args});\n            }\n        });\n    }\n\n    /**\n     * Store callback functions pending a response message.\n     * @param {Function} resolve - function to call if the service method returns.\n     * @param {Function} reject - function to call if the service method throws.\n     * @returns {*} - a unique response ID for this set of callbacks. See {@link _deliverResponse}.\n     * @protected\n     */\n    _storeCallbacks (resolve, reject) {\n        const responseId = this.nextResponseId++;\n        this.callbacks[responseId] = [resolve, reject];\n        return responseId;\n    }\n\n    /**\n     * Deliver call response from a worker. This should only be called as the result of a message from a worker.\n     * @param {int} responseId - the response ID of the callback set to call.\n     * @param {DispatchResponseMessage} message - the message containing the response value(s).\n     * @protected\n     */\n    _deliverResponse (responseId, message) {\n        try {\n            const [resolve, reject] = this.callbacks[responseId];\n            delete this.callbacks[responseId];\n            if (message.error) {\n                reject(message.error);\n            } else {\n                resolve(message.result);\n            }\n        } catch (e) {\n            log.error(`Dispatch callback failed: ${e}`);\n        }\n    }\n\n    /**\n     * Handle a message event received from a connected worker.\n     * @param {Worker} worker - the worker which sent the message, or the global object if running in a worker.\n     * @param {MessageEvent} event - the message event to be handled.\n     * @protected\n     */\n    _onMessage (worker, event) {\n        /** @type {DispatchMessage} */\n        const message = event.data;\n        message.args = message.args || [];\n        let promise;\n        if (message.service) {\n            if (message.service === 'dispatch') {\n                promise = this._onDispatchMessage(worker, message);\n            } else {\n                promise = this.call(message.service, message.method, ...message.args);\n            }\n        } else if (typeof message.responseId === 'undefined') {\n            log.error(`Dispatch caught malformed message from a worker: ${JSON.stringify(event)}`);\n        } else {\n            this._deliverResponse(message.responseId, message);\n        }\n        if (promise) {\n            if (typeof message.responseId === 'undefined') {\n                log.error(`Dispatch message missing required response ID: ${JSON.stringify(event)}`);\n            } else {\n                promise.then(\n                    result => worker.postMessage({responseId: message.responseId, result}),\n                    error => worker.postMessage({responseId: message.responseId, error: `${error}`})\n                );\n            }\n        }\n    }\n\n    /**\n     * Fetch the service provider object for a particular service name.\n     * @abstract\n     * @param {string} service - the name of the service to look up\n     * @returns {{provider:(object|Worker), isRemote:boolean}} - the means to contact the service, if found\n     * @protected\n     */\n    _getServiceProvider (service) {\n        throw new Error(`Could not get provider for ${service}: _getServiceProvider not implemented`);\n    }\n\n    /**\n     * Handle a call message sent to the dispatch service itself\n     * @abstract\n     * @param {Worker} worker - the worker which sent the message.\n     * @param {DispatchCallMessage} message - the message to be handled.\n     * @returns {Promise|undefined} - a promise for the results of this operation, if appropriate\n     * @private\n     */\n    _onDispatchMessage (worker, message) {\n        throw new Error(`Unimplemented dispatch message handler cannot handle ${message.method} method`);\n    }\n}\n\nmodule.exports = SharedDispatch;\n","const SharedDispatch = require('./shared-dispatch');\n\nconst log = require('../util/log');\nconst {centralDispatchService} = require('../extension-support/tw-extension-worker-context');\n\n/**\n * This class provides a Worker with the means to participate in the message dispatch system managed by CentralDispatch.\n * From any context in the messaging system, the dispatcher's \"call\" method can call any method on any \"service\"\n * provided in any participating context. The dispatch system will forward function arguments and return values across\n * worker boundaries as needed.\n * @see {CentralDispatch}\n */\nclass WorkerDispatch extends SharedDispatch {\n    constructor () {\n        super();\n\n        /**\n         * This promise will be resolved when we have successfully connected to central dispatch.\n         * @type {Promise}\n         * @see {waitForConnection}\n         * @private\n         */\n        this._connectionPromise = new Promise(resolve => {\n            this._onConnect = resolve;\n        });\n\n        /**\n         * Map of service name to local service provider.\n         * If a service is not listed here, it is assumed to be provided by another context (another Worker or the main\n         * thread).\n         * @see {setService}\n         * @type {object}\n         */\n        this.services = {};\n\n        this._onMessage = this._onMessage.bind(this, centralDispatchService);\n        if (typeof self !== 'undefined') {\n            self.onmessage = this._onMessage;\n        }\n    }\n\n    /**\n     * @returns {Promise} a promise which will resolve upon connection to central dispatch. If you need to make a call\n     * immediately on \"startup\" you can attach a 'then' to this promise.\n     * @example\n     *      dispatch.waitForConnection.then(() => {\n     *          dispatch.call('myService', 'hello');\n     *      })\n     */\n    get waitForConnection () {\n        return this._connectionPromise;\n    }\n\n    /**\n     * Set a local object as the global provider of the specified service.\n     * WARNING: Any method on the provider can be called from any worker within the dispatch system.\n     * @param {string} service - a globally unique string identifying this service. Examples: 'vm', 'gui', 'extension9'.\n     * @param {object} provider - a local object which provides this service.\n     * @returns {Promise} - a promise which will resolve once the service is registered.\n     */\n    setService (service, provider) {\n        if (this.services.hasOwnProperty(service)) {\n            log.warn(`Worker dispatch replacing existing service provider for ${service}`);\n        }\n        this.services[service] = provider;\n        return this.waitForConnection.then(() => this._remoteCall(centralDispatchService, 'dispatch', 'setService', service));\n    }\n\n    /**\n     * Fetch the service provider object for a particular service name.\n     * @override\n     * @param {string} service - the name of the service to look up\n     * @returns {{provider:(object|Worker), isRemote:boolean}} - the means to contact the service, if found\n     * @protected\n     */\n    _getServiceProvider (service) {\n        // if we don't have a local service by this name, contact central dispatch by calling `postMessage` on self\n        const provider = this.services[service];\n        return {\n            provider: provider || centralDispatchService,\n            isRemote: !provider\n        };\n    }\n\n    /**\n     * Handle a call message sent to the dispatch service itself\n     * @override\n     * @param {Worker} worker - the worker which sent the message.\n     * @param {DispatchCallMessage} message - the message to be handled.\n     * @returns {Promise|undefined} - a promise for the results of this operation, if appropriate\n     * @protected\n     */\n    _onDispatchMessage (worker, message) {\n        let promise;\n        switch (message.method) {\n        case 'handshake':\n            promise = this._onConnect();\n            break;\n        case 'terminate':\n            // Don't close until next tick, after sending confirmation back\n            setTimeout(() => self.close(), 0);\n            promise = Promise.resolve();\n            break;\n        default:\n            log.error(`Worker dispatch received message for unknown method: ${message.method}`);\n        }\n        return promise;\n    }\n}\n\nmodule.exports = new WorkerDispatch();\n","/**\n * Block argument types\n * @enum {string}\n */\nconst ArgumentType = {\n    /**\n     * Numeric value with angle picker\n     */\n    ANGLE: 'angle',\n\n    /**\n     * Boolean value with hexagonal placeholder\n     */\n    BOOLEAN: 'Boolean',\n\n    /**\n     * Numeric value with color picker\n     */\n    COLOR: 'color',\n\n    /**\n     * Numeric value with text field\n     */\n    NUMBER: 'number',\n\n    /**\n     * String value with text field\n     */\n    STRING: 'string',\n\n    /**\n     * String value with matrix field\n     */\n    MATRIX: 'matrix',\n\n    /**\n     * MIDI note number with note picker (piano) field\n     */\n    NOTE: 'note',\n\n    /**\n     * Inline image on block (as part of the label)\n     */\n    IMAGE: 'image'\n};\n\nmodule.exports = ArgumentType;\n","/**\n * Types of block\n * @enum {string}\n */\nconst BlockType = {\n    /**\n     * Boolean reporter with hexagonal shape\n     */\n    BOOLEAN: 'Boolean',\n\n    /**\n     * A button (not an actual block) for some special action, like making a variable\n     */\n    BUTTON: 'button',\n\n    /**\n     * Command block\n     */\n    COMMAND: 'command',\n\n    /**\n     * Specialized command block which may or may not run a child branch\n     * The thread continues with the next block whether or not a child branch ran.\n     */\n    CONDITIONAL: 'conditional',\n\n    /**\n     * Specialized hat block with no implementation function\n     * This stack only runs if the corresponding event is emitted by other code.\n     */\n    EVENT: 'event',\n\n    /**\n     * Hat block which conditionally starts a block stack\n     */\n    HAT: 'hat',\n\n    /**\n     * Specialized command block which may or may not run a child branch\n     * If a child branch runs, the thread evaluates the loop block again.\n     */\n    LOOP: 'loop',\n\n    /**\n     * General reporter with numeric or string value\n     */\n    REPORTER: 'reporter'\n};\n\nmodule.exports = BlockType;\n","/**\n * Default types of Target supported by the VM\n * @enum {string}\n */\nconst TargetType = {\n    /**\n     * Rendered target which can move, change costumes, etc.\n     */\n    SPRITE: 'sprite',\n\n    /**\n     * Rendered target which cannot move but can change backdrops\n     */\n    STAGE: 'stage'\n};\n\nmodule.exports = TargetType;\n","const ArgumentType = require('./argument-type');\nconst BlockType = require('./block-type');\nconst TargetType = require('./target-type');\nconst Cast = require('../util/cast');\n\nconst Scratch = {\n    ArgumentType,\n    BlockType,\n    TargetType,\n    Cast\n};\n\nmodule.exports = Scratch;\n","module.exports = {\n    isWorker: true,\n    // centralDispatchService is the object to call postMessage() on to send a message to parent.\n    centralDispatchService: self\n};\n","// ScratchX API Documentation: https://github.com/LLK/scratchx/wiki/\n\n// Global Scratch API from extension-worker.js\n/* globals Scratch */\n\nconst ArgumentType = require('./argument-type');\nconst BlockType = require('./block-type');\n\nconst {\n    argumentIndexToId,\n    generateExtensionId\n} = require('./tw-scratchx-utilities');\n\n/**\n * @typedef ScratchXDescriptor\n * @property {unknown[][]} blocks\n * @property {Record<string, unknown[]>} [menus]\n * @property {string} [url]\n * @property {string} [displayName]\n */\n\n/**\n * @typedef ScratchXStatus\n * @property {0|1|2} status 0 is red/error, 1 is yellow/not ready, 2 is green/ready\n * @property {string} msg\n */\n\nconst parseScratchXBlockType = type => {\n    if (type === '' || type === ' ' || type === 'w') {\n        return {\n            type: BlockType.COMMAND,\n            async: type === 'w'\n        };\n    }\n    if (type === 'r' || type === 'R') {\n        return {\n            type: BlockType.REPORTER,\n            async: type === 'R'\n        };\n    }\n    if (type === 'b') {\n        return {\n            type: BlockType.BOOLEAN,\n            // ScratchX docs don't seem to mention boolean reporters that wait\n            async: false\n        };\n    }\n    if (type === 'h') {\n        return {\n            type: BlockType.HAT,\n            async: false\n        };\n    }\n    throw new Error(`Unknown ScratchX block type: ${type}`);\n};\n\nconst isScratchCompatibleValue = v => typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean';\n\n/**\n * @param {string} argument ScratchX argument with leading % removed.\n * @param {unknown} defaultValue Default value, if any\n */\nconst parseScratchXArgument = (argument, defaultValue) => {\n    const result = {};\n    const hasDefaultValue = isScratchCompatibleValue(defaultValue);\n    if (hasDefaultValue) {\n        result.defaultValue = defaultValue;\n    }\n    // TODO: ScratchX docs don't mention support for boolean arguments?\n    if (argument === 's') {\n        result.type = ArgumentType.STRING;\n        if (!hasDefaultValue) {\n            result.defaultValue = '';\n        }\n    } else if (argument === 'n') {\n        result.type = ArgumentType.NUMBER;\n        if (!hasDefaultValue) {\n            result.defaultValue = 0;\n        }\n    } else if (argument[0] === 'm') {\n        result.type = ArgumentType.STRING;\n        const split = argument.split(/\\.|:/);\n        const menuName = split[1];\n        result.menu = menuName;\n    } else {\n        throw new Error(`Unknown ScratchX argument type: ${argument}`);\n    }\n    return result;\n};\n\nconst wrapScratchXFunction = (originalFunction, argumentCount, async) => args => {\n    // Convert Scratch 3's argument object to an argument list expected by ScratchX\n    const argumentList = [];\n    for (let i = 0; i < argumentCount; i++) {\n        argumentList.push(args[argumentIndexToId(i)]);\n    }\n    if (async) {\n        return new Promise(resolve => {\n            originalFunction(...argumentList, resolve);\n        });\n    }\n    return originalFunction(...argumentList);\n};\n\n/**\n * @param {string} name\n * @param {ScratchXDescriptor} descriptor\n * @param {Record<string, () => unknown>} functions\n */\nconst convert = (name, descriptor, functions) => {\n    const extensionId = generateExtensionId(name);\n    const info = {\n        id: extensionId,\n        name: descriptor.displayName || name,\n        blocks: [],\n        color1: '#4a4a5e',\n        color2: '#31323f',\n        color3: '#191a21'\n    };\n    const scratch3Extension = {\n        getInfo: () => info,\n        _getStatus: functions._getStatus\n    };\n\n    if (descriptor.url) {\n        info.docsURI = descriptor.url;\n    }\n\n    for (const blockDescriptor of descriptor.blocks) {\n        if (blockDescriptor.length === 1) {\n            // Separator\n            info.blocks.push('---');\n            continue;\n        }\n        const scratchXBlockType = blockDescriptor[0];\n        const blockText = blockDescriptor[1];\n        const functionName = blockDescriptor[2];\n        const defaultArgumentValues = blockDescriptor.slice(3);\n\n        let scratchText = '';\n        const argumentInfo = [];\n        const blockTextParts = blockText.split(/%([\\w.:]+)/g);\n        for (let i = 0; i < blockTextParts.length; i++) {\n            const part = blockTextParts[i];\n            const isArgument = i % 2 === 1;\n            if (isArgument) {\n                parseScratchXArgument(part);\n                const argumentIndex = Math.floor(i / 2).toString();\n                const argumentDefaultValue = defaultArgumentValues[argumentIndex];\n                const argumentId = argumentIndexToId(argumentIndex);\n                argumentInfo[argumentId] = parseScratchXArgument(part, argumentDefaultValue);\n                scratchText += `[${argumentId}]`;\n            } else {\n                scratchText += part;\n            }\n        }\n\n        const scratch3BlockType = parseScratchXBlockType(scratchXBlockType);\n        const blockInfo = {\n            opcode: functionName,\n            blockType: scratch3BlockType.type,\n            text: scratchText,\n            arguments: argumentInfo\n        };\n        info.blocks.push(blockInfo);\n\n        const originalFunction = functions[functionName];\n        const argumentCount = argumentInfo.length;\n        scratch3Extension[functionName] = wrapScratchXFunction(\n            originalFunction,\n            argumentCount,\n            scratch3BlockType.async\n        );\n    }\n\n    const menus = descriptor.menus;\n    if (menus) {\n        const scratch3Menus = {};\n        for (const menuName of Object.keys(menus) || {}) {\n            const menuItems = menus[menuName];\n            const menuInfo = {\n                items: menuItems\n            };\n            scratch3Menus[menuName] = menuInfo;\n        }\n        info.menus = scratch3Menus;\n    }\n\n    return scratch3Extension;\n};\n\nconst extensionNameToExtension = new Map();\n\nconst register = (name, descriptor, functions) => {\n    const scratch3Extension = convert(name, descriptor, functions);\n    extensionNameToExtension.set(name, scratch3Extension);\n    Scratch.extensions.register(scratch3Extension);\n};\n\n/**\n * @param {string} extensionName\n * @returns {ScratchXStatus}\n */\nconst getStatus = extensionName => {\n    const extension = extensionNameToExtension.get(extensionName);\n    if (extension) {\n        return extension._getStatus();\n    }\n    return {\n        status: 0,\n        msg: 'does not exist'\n    };\n};\n\nmodule.exports = {\n    register,\n    getStatus,\n\n    // For tests\n    convert\n};\n","/**\n * @fileoverview\n * General ScratchX-related utilities used in multiple places.\n * Changing these functions may break projects.\n */\n\n/**\n * @param {string} scratchXName\n * @returns {string}\n */\nconst generateExtensionId = scratchXName => {\n    const sanitizedName = scratchXName.replace(/[^a-z0-9]/gi, '').toLowerCase();\n    return `sbx${sanitizedName}`;\n};\n\n/**\n * @param {number} i 0-indexed index of argument in list\n * @returns {string} Scratch 3 argument name\n */\nconst argumentIndexToId = i => i.toString();\n\nmodule.exports = {\n    generateExtensionId,\n    argumentIndexToId\n};\n","const Color = require('../util/color');\n\n/**\n * @fileoverview\n * Utilities for casting and comparing Scratch data-types.\n * Scratch behaves slightly differently from JavaScript in many respects,\n * and these differences should be encapsulated below.\n * For example, in Scratch, add(1, join(\"hello\", world\")) -> 1.\n * This is because \"hello world\" is cast to 0.\n * In JavaScript, 1 + Number(\"hello\" + \"world\") would give you NaN.\n * Use when coercing a value before computation.\n */\n\nclass Cast {\n    /**\n     * Scratch cast to number.\n     * Treats NaN as 0.\n     * In Scratch 2.0, this is captured by `interp.numArg.`\n     * @param {*} value Value to cast to number.\n     * @return {number} The Scratch-casted number value.\n     */\n    static toNumber (value) {\n        // If value is already a number we don't need to coerce it with\n        // Number().\n        if (typeof value === 'number') {\n            // Scratch treats NaN as 0, when needed as a number.\n            // E.g., 0 + NaN -> 0.\n            if (Number.isNaN(value)) {\n                return 0;\n            }\n            return value;\n        }\n        const n = Number(value);\n        if (Number.isNaN(n)) {\n            // Scratch treats NaN as 0, when needed as a number.\n            // E.g., 0 + NaN -> 0.\n            return 0;\n        }\n        return n;\n    }\n\n    /**\n     * Scratch cast to boolean.\n     * In Scratch 2.0, this is captured by `interp.boolArg.`\n     * Treats some string values differently from JavaScript.\n     * @param {*} value Value to cast to boolean.\n     * @return {boolean} The Scratch-casted boolean value.\n     */\n    static toBoolean (value) {\n        // Already a boolean?\n        if (typeof value === 'boolean') {\n            return value;\n        }\n        if (typeof value === 'string') {\n            // These specific strings are treated as false in Scratch.\n            if ((value === '') ||\n                (value === '0') ||\n                (value.toLowerCase() === 'false')) {\n                return false;\n            }\n            // All other strings treated as true.\n            return true;\n        }\n        // Coerce other values and numbers.\n        return Boolean(value);\n    }\n\n    /**\n     * Scratch cast to string.\n     * @param {*} value Value to cast to string.\n     * @return {string} The Scratch-casted string value.\n     */\n    static toString (value) {\n        return String(value);\n    }\n\n    /**\n     * Cast any Scratch argument to an RGB color array to be used for the renderer.\n     * @param {*} value Value to convert to RGB color array.\n     * @return {Array.<number>} [r,g,b], values between 0-255.\n     */\n    static toRgbColorList (value) {\n        const color = Cast.toRgbColorObject(value);\n        return [color.r, color.g, color.b];\n    }\n\n    /**\n     * Cast any Scratch argument to an RGB color object to be used for the renderer.\n     * @param {*} value Value to convert to RGB color object.\n     * @return {RGBOject} [r,g,b], values between 0-255.\n     */\n    static toRgbColorObject (value) {\n        let color;\n        if (typeof value === 'string' && value.substring(0, 1) === '#') {\n            color = Color.hexToRgb(value);\n\n            // If the color wasn't *actually* a hex color, cast to black\n            if (!color) color = {r: 0, g: 0, b: 0, a: 255};\n        } else {\n            color = Color.decimalToRgb(Cast.toNumber(value));\n        }\n        return color;\n    }\n\n    /**\n     * Determine if a Scratch argument is a white space string (or null / empty).\n     * @param {*} val value to check.\n     * @return {boolean} True if the argument is all white spaces or null / empty.\n     */\n    static isWhiteSpace (val) {\n        return val === null || (typeof val === 'string' && val.trim().length === 0);\n    }\n\n    /**\n     * Compare two values, using Scratch cast, case-insensitive string compare, etc.\n     * In Scratch 2.0, this is captured by `interp.compare.`\n     * @param {*} v1 First value to compare.\n     * @param {*} v2 Second value to compare.\n     * @returns {number} Negative number if v1 < v2; 0 if equal; positive otherwise.\n     */\n    static compare (v1, v2) {\n        let n1 = Number(v1);\n        let n2 = Number(v2);\n        if (n1 === 0 && Cast.isWhiteSpace(v1)) {\n            n1 = NaN;\n        } else if (n2 === 0 && Cast.isWhiteSpace(v2)) {\n            n2 = NaN;\n        }\n        if (isNaN(n1) || isNaN(n2)) {\n            // At least one argument can't be converted to a number.\n            // Scratch compares strings as case insensitive.\n            const s1 = String(v1).toLowerCase();\n            const s2 = String(v2).toLowerCase();\n            if (s1 < s2) {\n                return -1;\n            } else if (s1 > s2) {\n                return 1;\n            }\n            return 0;\n        }\n        // Handle the special case of Infinity\n        if (\n            (n1 === Infinity && n2 === Infinity) ||\n            (n1 === -Infinity && n2 === -Infinity)\n        ) {\n            return 0;\n        }\n        // Compare as numbers.\n        return n1 - n2;\n    }\n\n    /**\n     * Determine if a Scratch argument number represents a round integer.\n     * @param {*} val Value to check.\n     * @return {boolean} True if number looks like an integer.\n     */\n    static isInt (val) {\n        // Values that are already numbers.\n        if (typeof val === 'number') {\n            if (isNaN(val)) { // NaN is considered an integer.\n                return true;\n            }\n            // True if it's \"round\" (e.g., 2.0 and 2).\n            return val === Math.floor(val);\n        } else if (typeof val === 'boolean') {\n            // `True` and `false` always represent integer after Scratch cast.\n            return true;\n        } else if (typeof val === 'string') {\n            // If it contains a decimal point, don't consider it an int.\n            return val.indexOf('.') < 0;\n        }\n        return false;\n    }\n\n    static get LIST_INVALID () {\n        return 'INVALID';\n    }\n\n    static get LIST_ALL () {\n        return 'ALL';\n    }\n\n    /**\n     * Compute a 1-based index into a list, based on a Scratch argument.\n     * Two special cases may be returned:\n     * LIST_ALL: if the block is referring to all of the items in the list.\n     * LIST_INVALID: if the index was invalid in any way.\n     * @param {*} index Scratch arg, including 1-based numbers or special cases.\n     * @param {number} length Length of the list.\n     * @param {boolean} acceptAll Whether it should accept \"all\" or not.\n     * @return {(number|string)} 1-based index for list, LIST_ALL, or LIST_INVALID.\n     */\n    static toListIndex (index, length, acceptAll) {\n        if (typeof index !== 'number') {\n            if (index === 'all') {\n                return acceptAll ? Cast.LIST_ALL : Cast.LIST_INVALID;\n            }\n            if (index === 'last') {\n                if (length > 0) {\n                    return length;\n                }\n                return Cast.LIST_INVALID;\n            } else if (index === 'random' || index === 'any') {\n                if (length > 0) {\n                    return 1 + Math.floor(Math.random() * length);\n                }\n                return Cast.LIST_INVALID;\n            }\n        }\n        index = Math.floor(Cast.toNumber(index));\n        if (index < 1 || index > length) {\n            return Cast.LIST_INVALID;\n        }\n        return index;\n    }\n}\n\nmodule.exports = Cast;\n","class Color {\n    /**\n     * @typedef {object} RGBObject - An object representing a color in RGB format.\n     * @property {number} r - the red component, in the range [0, 255].\n     * @property {number} g - the green component, in the range [0, 255].\n     * @property {number} b - the blue component, in the range [0, 255].\n     */\n\n    /**\n     * @typedef {object} HSVObject - An object representing a color in HSV format.\n     * @property {number} h - hue, in the range [0-359).\n     * @property {number} s - saturation, in the range [0,1].\n     * @property {number} v - value, in the range [0,1].\n     */\n\n    /** @type {RGBObject} */\n    static get RGB_BLACK () {\n        return {r: 0, g: 0, b: 0};\n    }\n\n    /** @type {RGBObject} */\n    static get RGB_WHITE () {\n        return {r: 255, g: 255, b: 255};\n    }\n\n    /**\n     * Convert a Scratch decimal color to a hex string, #RRGGBB.\n     * @param {number} decimal RGB color as a decimal.\n     * @return {string} RGB color as #RRGGBB hex string.\n     */\n    static decimalToHex (decimal) {\n        if (decimal < 0) {\n            decimal += 0xFFFFFF + 1;\n        }\n        let hex = Number(decimal).toString(16);\n        hex = `#${'000000'.substr(0, 6 - hex.length)}${hex}`;\n        return hex;\n    }\n\n    /**\n     * Convert a Scratch decimal color to an RGB color object.\n     * @param {number} decimal RGB color as decimal.\n     * @return {RGBObject} rgb - {r: red [0,255], g: green [0,255], b: blue [0,255]}.\n     */\n    static decimalToRgb (decimal) {\n        const a = (decimal >> 24) & 0xFF;\n        const r = (decimal >> 16) & 0xFF;\n        const g = (decimal >> 8) & 0xFF;\n        const b = decimal & 0xFF;\n        return {r: r, g: g, b: b, a: a > 0 ? a : 255};\n    }\n\n    /**\n     * Convert a hex color (e.g., F00, #03F, #0033FF) to an RGB color object.\n     * @param {!string} hex Hex representation of the color.\n     * @return {RGBObject} null on failure, or rgb: {r: red [0,255], g: green [0,255], b: blue [0,255]}.\n     */\n    static hexToRgb (hex) {\n        if (hex.startsWith('#')) {\n            hex = hex.substring(1);\n        }\n        const parsed = parseInt(hex, 16);\n        if (isNaN(parsed)) {\n            return null;\n        }\n        if (hex.length === 6) {\n            return {\n                r: (parsed >> 16) & 0xff,\n                g: (parsed >> 8) & 0xff,\n                b: parsed & 0xff\n            };\n        } else if (hex.length === 3) {\n            const r = ((parsed >> 8) & 0xf);\n            const g = ((parsed >> 4) & 0xf);\n            const b = parsed & 0xf;\n            return {\n                r: (r << 4) | r,\n                g: (g << 4) | g,\n                b: (b << 4) | b\n            };\n        }\n        return null;\n    }\n\n    /**\n     * Convert an RGB color object to a hex color.\n     * @param {RGBObject} rgb - {r: red [0,255], g: green [0,255], b: blue [0,255]}.\n     * @return {!string} Hex representation of the color.\n     */\n    static rgbToHex (rgb) {\n        return Color.decimalToHex(Color.rgbToDecimal(rgb));\n    }\n\n    /**\n     * Convert an RGB color object to a Scratch decimal color.\n     * @param {RGBObject} rgb - {r: red [0,255], g: green [0,255], b: blue [0,255]}.\n     * @return {!number} Number representing the color.\n     */\n    static rgbToDecimal (rgb) {\n        return (rgb.r << 16) + (rgb.g << 8) + rgb.b;\n    }\n\n    /**\n    * Convert a hex color (e.g., F00, #03F, #0033FF) to a decimal color number.\n    * @param {!string} hex Hex representation of the color.\n    * @return {!number} Number representing the color.\n    */\n    static hexToDecimal (hex) {\n        return Color.rgbToDecimal(Color.hexToRgb(hex));\n    }\n\n    /**\n     * Convert an HSV color to RGB format.\n     * @param {HSVObject} hsv - {h: hue [0,360), s: saturation [0,1], v: value [0,1]}\n     * @return {RGBObject} rgb - {r: red [0,255], g: green [0,255], b: blue [0,255]}.\n     */\n    static hsvToRgb (hsv) {\n        let h = hsv.h % 360;\n        if (h < 0) h += 360;\n        const s = Math.max(0, Math.min(hsv.s, 1));\n        const v = Math.max(0, Math.min(hsv.v, 1));\n\n        const i = Math.floor(h / 60);\n        const f = (h / 60) - i;\n        const p = v * (1 - s);\n        const q = v * (1 - (s * f));\n        const t = v * (1 - (s * (1 - f)));\n\n        let r;\n        let g;\n        let b;\n\n        switch (i) {\n        default:\n        case 0:\n            r = v;\n            g = t;\n            b = p;\n            break;\n        case 1:\n            r = q;\n            g = v;\n            b = p;\n            break;\n        case 2:\n            r = p;\n            g = v;\n            b = t;\n            break;\n        case 3:\n            r = p;\n            g = q;\n            b = v;\n            break;\n        case 4:\n            r = t;\n            g = p;\n            b = v;\n            break;\n        case 5:\n            r = v;\n            g = p;\n            b = q;\n            break;\n        }\n\n        return {\n            r: Math.floor(r * 255),\n            g: Math.floor(g * 255),\n            b: Math.floor(b * 255)\n        };\n    }\n\n    /**\n     * Convert an RGB color to HSV format.\n     * @param {RGBObject} rgb - {r: red [0,255], g: green [0,255], b: blue [0,255]}.\n     * @return {HSVObject} hsv - {h: hue [0,360), s: saturation [0,1], v: value [0,1]}\n     */\n    static rgbToHsv (rgb) {\n        const r = rgb.r / 255;\n        const g = rgb.g / 255;\n        const b = rgb.b / 255;\n        const x = Math.min(Math.min(r, g), b);\n        const v = Math.max(Math.max(r, g), b);\n\n        // For grays, hue will be arbitrarily reported as zero. Otherwise, calculate\n        let h = 0;\n        let s = 0;\n        if (x !== v) {\n            const f = (r === x) ? g - b : ((g === x) ? b - r : r - g);\n            const i = (r === x) ? 3 : ((g === x) ? 5 : 1);\n            h = ((i - (f / (v - x))) * 60) % 360;\n            s = (v - x) / v;\n        }\n\n        return {h: h, s: s, v: v};\n    }\n\n    /**\n     * Linear interpolation between rgb0 and rgb1.\n     * @param {RGBObject} rgb0 - the color corresponding to fraction1 <= 0.\n     * @param {RGBObject} rgb1 - the color corresponding to fraction1 >= 1.\n     * @param {number} fraction1 - the interpolation parameter. If this is 0.5, for example, mix the two colors equally.\n     * @return {RGBObject} the interpolated color.\n     */\n    static mixRgb (rgb0, rgb1, fraction1) {\n        if (fraction1 <= 0) return rgb0;\n        if (fraction1 >= 1) return rgb1;\n        const fraction0 = 1 - fraction1;\n        return {\n            r: (fraction0 * rgb0.r) + (fraction1 * rgb1.r),\n            g: (fraction0 * rgb0.g) + (fraction1 * rgb1.g),\n            b: (fraction0 * rgb0.b) + (fraction1 * rgb1.b)\n        };\n    }\n}\n\nmodule.exports = Color;\n","const minilog = require('minilog');\nminilog.enable();\n\nmodule.exports = minilog('vm');\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}