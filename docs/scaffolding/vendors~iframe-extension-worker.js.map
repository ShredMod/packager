{"version":3,"sources":["webpack:///./node_modules/scratch-vm/src/extension-support/tw-iframe-extension-worker.js","webpack:///./node_modules/scratch-vm/src/extension-support/tw-iframe-extension-worker-entry.js"],"names":["uid","require","frameSource","none","featurePolicy","generateAllow","Object","entries","map","name","permission","join","IframeExtensionWorker","constructor","id","isRemote","ready","queuedMessages","iframe","document","createElement","className","dataset","style","display","setAttribute","sandbox","allow","body","appendChild","window","addEventListener","_onWindowMessage","bind","blob","Blob","JSON","stringify","type","src","URL","createObjectURL","e","data","vmIframeId","transfer","postMessage","length","message","onmessage","contentWindow","push","module","exports"],"mappings":";;;;;;;;;AAAA,MAAMA,GAAG,GAAGC,mBAAO,CAAC,8DAAD,CAAnB;;AACA,MAAMC,WAAW,GAAGD,mBAAO,CAAC,8OAAD,CAA3B;;AAEA,MAAME,IAAI,GAAG,QAAb;AACA,MAAMC,aAAa,GAAG;EAClB,iBAAiBD,IADC;EAElB,wBAAwBA,IAFN;EAGlB,WAAWA,IAHO;EAIlB,UAAUA,IAJQ;EAKlB,mBAAmBA,IALD;EAMlB,mBAAmBA,IAND;EAOlB,mBAAmBA,IAPD;EAQlB,cAAcA,IARI;EASlB,eAAeA,IATG;EAUlB,aAAaA,IAVK;EAWlB,gBAAgBA,IAXE;EAYlB,cAAcA,IAZI;EAalB,QAAQA,IAbU;EAclB,WAAWA,IAdO;EAelB,sBAAsBA,IAfJ;EAgBlB,6BAA6BA,IAhBX;EAiBlB,qBAAqBA,IAjBH;EAkBlB,OAAOA,IAlBW;EAmBlB,WAAWA,IAnBO;EAoBlB,MAAMA,IApBY;EAqBlB,oBAAoBA,IArBF;EAsBlB,aAAaA,IAtBK;EAuBlB,mBAAmBA;AAvBD,CAAtB;;AA0BA,MAAME,aAAa,GAAG,MAAMC,MAAM,CAACC,OAAP,CAAeH,aAAf,EACvBI,GADuB,CACnB;EAAA,IAAC,CAACC,IAAD,EAAOC,UAAP,CAAD;EAAA,iBAA2BD,IAA3B,cAAmCC,UAAnC;AAAA,CADmB,EAEvBC,IAFuB,CAElB,IAFkB,CAA5B;;AAIA,MAAMC,qBAAN,CAA4B;EACxBC,WAAW,GAAI;IACX,KAAKC,EAAL,GAAUd,GAAG,EAAb;IACA,KAAKe,QAAL,GAAgB,IAAhB;IACA,KAAKC,KAAL,GAAa,KAAb;IACA,KAAKC,cAAL,GAAsB,EAAtB;IAEA,KAAKC,MAAL,GAAcC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;IACA,KAAKF,MAAL,CAAYG,SAAZ,GAAwB,2BAAxB;IACA,KAAKH,MAAL,CAAYI,OAAZ,CAAoBR,EAApB,GAAyB,KAAKA,EAA9B;IACA,KAAKI,MAAL,CAAYK,KAAZ,CAAkBC,OAAlB,GAA4B,MAA5B;IACA,KAAKN,MAAL,CAAYO,YAAZ,CAAyB,aAAzB,EAAwC,MAAxC;IACA,KAAKP,MAAL,CAAYQ,OAAZ,GAAsB,eAAtB;IACA,KAAKR,MAAL,CAAYS,KAAZ,GAAoBtB,aAAa,EAAjC;IACAc,QAAQ,CAACS,IAAT,CAAcC,WAAd,CAA0B,KAAKX,MAA/B;IAEAY,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAnC;IACA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAClB;IADkB,oEAE2CC,IAAI,CAACC,SAAL,CAAe,KAAKvB,EAApB,CAF3C,cAEsEZ,WAFtE,sBAAT,EAGV;MACCoC,IAAI,EAAE;IADP,CAHU,CAAb;IAMA,KAAKpB,MAAL,CAAYqB,GAAZ,GAAkBC,GAAG,CAACC,eAAJ,CAAoBP,IAApB,CAAlB;EACH;;EAEDF,gBAAgB,CAAEU,CAAF,EAAK;IACjB,IAAI,CAACA,CAAC,CAACC,IAAH,IAAWD,CAAC,CAACC,IAAF,CAAOC,UAAP,KAAsB,KAAK9B,EAA1C,EAA8C;MAC1C;IACH;;IACD,IAAI4B,CAAC,CAACC,IAAF,CAAO3B,KAAX,EAAkB;MACd,KAAKA,KAAL,GAAa,IAAb;;MACA,KAAK,MAAM;QAAC2B,IAAD;QAAOE;MAAP,CAAX,IAA+B,KAAK5B,cAApC,EAAoD;QAChD,KAAK6B,WAAL,CAAiBH,IAAjB,EAAuBE,QAAvB;MACH;;MACD,KAAK5B,cAAL,CAAoB8B,MAApB,GAA6B,CAA7B;IACH;;IACD,IAAIL,CAAC,CAACC,IAAF,CAAOK,OAAX,EAAoB;MAChB,KAAKC,SAAL,CAAe;QACXN,IAAI,EAAED,CAAC,CAACC,IAAF,CAAOK;MADF,CAAf;IAGH;EACJ;;EAEDC,SAAS,GAAI,CACT;EACH;;EAEDH,WAAW,CAAEH,IAAF,EAAQE,QAAR,EAAkB;IACzB,IAAI,KAAK7B,KAAT,EAAgB;MACZ,IAAI6B,QAAJ,EAAc;QACV,KAAK3B,MAAL,CAAYgC,aAAZ,CAA0BJ,WAA1B,CAAsCH,IAAtC,EAA4C,GAA5C,EAAiDE,QAAjD;MACH,CAFD,MAEO;QACH,KAAK3B,MAAL,CAAYgC,aAAZ,CAA0BJ,WAA1B,CAAsCH,IAAtC,EAA4C,GAA5C;MACH;IACJ,CAND,MAMO;MACH,KAAK1B,cAAL,CAAoBkC,IAApB,CAAyB;QAACR,IAAD;QAAOE;MAAP,CAAzB;IACH;EACJ;;AA1DuB;;AA6D5BO,MAAM,CAACC,OAAP,GAAiBzC,qBAAjB,C;;;;;;;;;;;AC/FA,+CAA+C,2FAA2F,mGAAmG,sGAAsG,2DAA2D,gBAAgB,2HAA2H,mFAAmF,iBAAiB,0JAA0J,oFAAoF,iGAAiG,cAAc,gIAAgI,uGAAuG,0IAA0I,0DAA0D,uDAAuD,gCAAgC,EAAE,gBAAgB,eAAe,8GAA8G,wEAAwE,qEAAqE,kBAAkB,EAAE,gBAAgB,6DAA6D,cAAc,EAAE,eAAe,6VAA6V,+DAA+D,yCAAyC,qGAAqG,4CAA4C,yCAAyC,qDAAqD,iCAAiC,EAAE,4HAA4H,mBAAmB,EAAE,kBAAkB,yBAAyB,eAAe,qJAAqJ,iGAAiG,0BAA0B,EAAE,gDAAgD,eAAe,GAAG,0DAA0D,6BAA6B,eAAe,+HAA+H,+DAA+D,GAAG,2FAA2F,2QAA2Q,YAAY,0FAA0F,ooBAAooB,kDAAkD,6JAA6J,sIAAsI,sBAAsB,yBAAyB,0CAA0C,2BAA2B,oCAAoC,oCAAoC,oBAAoB,8CAA8C,uBAAuB,uDAAuD,OAAO,OAAO,6CAA6C,OAAO,KAAK,MAAM,2HAA2H,+BAA+B,qCAAqC,OAAO,8BAA8B,sIAAsI,+PAA+P,kBAAkB,mBAAmB,EAAE,iBAAiB,0BAA0B,wCAAwC,EAAE,2BAA2B,uCAAuC,kBAAkB,KAAK,uCAAuC,wCAAwC,yBAAyB,gBAAgB,MAAM,2CAA2C,gBAAgB,EAAE,OAAO,KAAK,uCAAuC,eAAe,mBAAmB,EAAE,YAAY,6CAA6C,EAAE,KAAK,8BAA8B,0DAA0D,KAAK,yBAAyB,wCAAwC,EAAE,yFAAyF,yBAAyB,gBAAgB,MAAM,+BAA+B,OAAO,kBAAkB,KAAK,6BAA6B,qCAAqC,KAAK,mCAAmC,0BAA0B,oBAAoB,6CAA6C,yEAAyE,OAAO,gBAAgB,qBAAqB,kBAAkB,KAAK,IAAI,4BAA4B,2BAA2B,kBAAkB,wDAAwD,KAAK,IAAI,qBAAqB,aAAa,oUAAoU,qIAAqI,oBAAoB,wCAAwC,uBAAuB,wBAAwB,8BAA8B,iBAAiB,GAAG,4BAA4B,sGAAsG,sBAAsB,8BAA8B,EAAE,gBAAgB,IAAI,oGAAoG,sBAAsB,8BAA8B,EAAE,gBAAgB,IAAI,yCAAyC,qBAAqB,qBAAqB,gBAAgB,IAAI,+BAA+B,0FAA0F,IAAI,mDAAmD,kEAAkE,cAAc,SAAS,OAAO,+FAA+F,oBAAoB,OAAO,+FAA+F,qBAAqB,OAAO,KAAK,8BAA8B,IAAI,0DAA0D,iDAAiD,kDAAkD,KAAK,IAAI,4BAA4B,aAAa,wUAAwU,yNAAyN,kEAAkE,sDAAsD,0BAA0B,mDAAmD,UAAU,GAAG,0BAA0B,iDAAiD,UAAU,GAAG,0BAA0B,iDAAiD,UAAU,GAAG,0BAA0B,iDAAiD,UAAU,GAAG,0BAA0B,iDAAiD,UAAU,GAAG,sBAAsB,2FAA2F,0BAA0B,aAAa,IAAI,sFAAsF,mCAAmC,0BAA0B,IAAI,qEAAqE,4BAA4B,IAAI,kCAAkC,0BAA0B,4KAA4K,iCAAiC,kCAAkC,0JAA0J,gBAAgB,0FAA0F,iBAAiB,eAAe,gVAAgV,0FAA0F,4GAA4G,6BAA6B,+XAA+X,yCAAyC,IAAI,0CAA0C,qBAAqB,8BAA8B,IAAI,+CAA+C,iBAAiB,uDAAuD,sEAAsE,yBAAyB,oEAAoE,KAAK,sBAAsB,8BAA8B,EAAE,2BAA2B,uBAAuB,uCAAuC,gEAAgE,iBAAiB,yCAAyC,uCAAuC,4BAA4B,OAAO,mBAAmB,KAAK,EAAE,kBAAkB,IAAI,iDAAiD,8BAA8B,gBAAgB,IAAI,iDAAiD,2JAA2J,iHAAiH,gBAAgB,IAAI,sCAAsC,mCAAmC,kBAAkB,wDAAwD,KAAK,IAAI,+BAA+B,aAAa,oTAAoT,4IAA4I,iCAAiC,gDAAgD,sCAAsC,IAAI,mDAAmD,cAAc,GAAG,6BAA6B,YAAY,GAAG,4BAA4B,aAAa,4TAA4T,0HAA0H,0DAA0D,gDAAgD,0BAA0B,yDAAyD,aAAa,KAAK,2BAA2B,oEAAoE,KAAK,kCAAkC,qKAAqK,gDAAgD,OAAO,WAAW,kBAAkB,iBAAiB,OAAO,4CAA4C,SAAS,OAAO,YAAY,kCAAkC,KAAK,IAAI,6CAA6C,0HAA0H,gIAAgI,4BAA4B,aAAa,gWAAgW,uOAAuO,kBAAkB,uFAAuF,gCAAgC,gDAAgD,yBAAyB,gDAAgD,0BAA0B,iHAAiH,KAAK,IAAI,iGAAiG,GAAG,4BAA4B,aAAa,wWAAwW,uPAAuP,uFAAuF,gCAAgC,gDAAgD,yBAAyB,4CAA4C,0BAA0B,KAAK,6BAA6B,yBAAyB,WAAW,iBAAiB,OAAO,6CAA6C,OAAO,iIAAiI,KAAK,OAAO,uFAAuF,KAAK,IAAI,iGAAiG,GAAG,4BAA4B,aAAa,uUAAuU,eAAe,0LAA0L,iCAAiC,mBAAmB,0BAA0B,yBAAyB,EAAE,KAAK,OAAO,iCAAiC,EAAE,KAAK,GAAG,2BAA2B,aAAa,oTAAoT,oHAAoH,uQAAuQ,wHAAwH,iGAAiG,SAAS,yEAAyE,KAAK,YAAY,mDAAmD,6EAA6E,4DAA4D,KAAK,GAAG,0EAA0E,kCAAkC,SAAS,+DAA+D,EAAE,YAAY,gBAAgB,IAAI,kCAAkC,6BAA6B,SAAS,4CAA4C,EAAE,YAAY,gBAAgB,IAAI,uCAAuC,wBAAwB,uWAAuW,aAAa,oVAAoV,0HAA0H,gDAAgD,kCAAkC,iCAAiC,oBAAoB,sBAAsB,gDAAgD,wBAAwB,gCAAgC,qBAAqB,GAAG,gCAAgC,8DAA8D,qBAAqB,aAAa,EAAE,gDAAgD,IAAI,4CAA4C,6CAA6C,oBAAoB,wCAAwC,iDAAiD,oDAAoD,6LAA6L,uBAAuB,OAAO,aAAa,wCAAwC,mCAAmC,SAAS,WAAW,EAAE,OAAO,kDAAkD,qCAAqC,aAAa,EAAE,+CAA+C,OAAO,OAAO,wDAAwD,WAAW,gBAAgB,OAAO,+BAA+B,iKAAiK,yCAAyC,2BAA2B,wDAAwD,SAAS,OAAO,oBAAoB,8BAA8B,OAAO,qBAAqB,oBAAoB,OAAO,EAAE,sBAAsB,KAAK,iBAAiB,IAAI,6CAA6C,4HAA4H,sEAAsE,+CAA+C,KAAK,0CAA0C,6BAA6B,+BAA+B,EAAE,OAAO,KAAK,IAAI,gCAAgC,aAAa,gVAAgV,8IAA8I,iCAAiC,gDAAgD,4GAA4G,SAAS,kBAAkB,sFAAsF,EAAE,+DAA+D,0DAA0D,KAAK,YAAY,IAAI,4BAA4B,WAAW,4XAA4X,sGAAsG,oBAAoB,OAAO,0GAA0G,EAAE,kEAAkE,8BAA8B,gBAAgB,OAAO,+DAA+D,OAAO,6DAA6D,gBAAgB,2EAA2E,OAAO,8GAA8G,EAAE,mGAAmG,YAAY,8GAA8G,YAAY,qHAAqH,4CAA4C,sJAAsJ,sBAAsB,MAAM,qBAAqB,kCAAkC,mBAAmB,0RAA0R,mBAAmB,mCAAmC,kEAAkE,IAAI,yCAAyC,KAAK,4eAA4e,uHAAuH,eAAe,OAAO,kDAAkD,OAAO,gDAAgD,EAAE,4EAA4E,QAAQ,8FAA8F,4FAA4F,aAAa,UAAU,yCAAyC,OAAO,iEAAiE,KAAK,ghBAAghB,mKAAmK,eAAe,OAAO,kDAAkD,OAAO,gDAAgD,MAAM,iHAAiH,EAAE,4EAA4E,QAAQ,gHAAgH,WAAW,eAAe,8CAA8C,qCAAqC,yBAAyB,oGAAoG,eAAe,WAAW,+CAA+C,WAAW,2BAA2B,0FAA0F,WAAW,kEAAkE,yCAAyC,SAAS,oFAAoF,OAAO,YAAY,iCAAiC,OAAO,KAAK,mFAAmF,OAAO,iDAAiD,QAAQ,gJAAgJ,wDAAwD,KAAK,oBAAoB,WAAW,4FAA4F,OAAO,sFAAsF,OAAO,kDAAkD,OAAO,gDAAgD,EAAE,4EAA4E,QAAQ,+GAA+G,gGAAgG,eAAe,WAAW,2CAA2C,OAAO,kFAAkF,KAAK,oBAAoB,mBAAmB,4FAA4F,OAAO,sFAAsF,OAAO,kDAAkD,OAAO,gDAAgD,MAAM,iHAAiH,EAAE,4EAA4E,QAAQ,iIAAiI,gGAAgG,eAAe,WAAW,2CAA2C,OAAO,iDAAiD,iEAAiE,4YAA4Y,qBAAqB,qBAAqB,SAAS,yBAAyB,gCAAgC,yFAAyF,YAAY,SAAS,OAAO,gCAAgC,yFAAyF,EAAE,SAAS,OAAO,EAAE,KAAK,iFAAiF,SAAS,yEAAyE,SAAS,yEAAyE,EAAE,wDAAwD,uBAAuB,mEAAmE,+CAA+C,qDAAqD,wBAAwB,KAAK,sIAAsI,IAAI,yEAAyE,wBAAwB,+HAA+H,WAAW,6DAA6D,0CAA0C,8BAA8B,gCAAgC,SAAS,OAAO,kCAAkC,SAAS,OAAO,YAAY,4DAA4D,OAAO,KAAK,qFAAqF,OAAO,wGAAwG,aAAa,oGAAoG,iBAAiB,gBAAgB,oCAAoC,wCAAwC,kBAAkB,8BAA8B,6CAA6C,6DAA6D,SAAS,OAAO,gFAAgF,SAAS,OAAO,sDAAsD,uGAAuG,OAAO,OAAO,2DAA2D,OAAO,sBAAsB,wDAAwD,uGAAuG,SAAS,OAAO,qDAAqD,wEAAwE,gCAAgC,2FAA2F,GAAG,SAAS,OAAO,KAAK,6GAA6G,OAAO,+DAA+D,4CAA4C,2GAA2G,kHAAkH,KAAK,sGAAsG,OAAO,2DAA2D,oBAAoB,sDAAsD,kBAAkB,iIAAiI,qHAAqH,KAAK,KAAK,oCAAoC,WAAW,4XAA4X,uIAAuI,sGAAsG,WAAW,6BAA6B,mKAAmK,yZAAyZ,gBAAgB,wDAAwD,mBAAmB,cAAc,wHAAwH,QAAQ,eAAe,kBAAkB,oFAAoF,kCAAkC,OAAO,EAAE,qNAAqN,WAAW,gBAAgB,OAAO,oCAAoC,2EAA2E,0CAA0C,yCAAyC,OAAO,KAAK,wBAAwB,QAAQ,yOAAyO,oDAAoD,aAAa,yCAAyC,qCAAqC,KAAK,oMAAoM,OAAO,iHAAiH,OAAO,wEAAwE,QAAQ,6GAA6G,kDAAkD,+FAA+F,OAAO,0CAA0C,4HAA4H,KAAK,6GAA6G,OAAO,+DAA+D,4CAA4C,2GAA2G,+JAA+J,cAAc,wFAAwF,KAAK,sGAAsG,OAAO,2DAA2D,oBAAoB,sDAAsD,kBAAkB,mIAAmI,kBAAkB,iCAAiC,+DAA+D,gBAAgB,gJAAgJ,sCAAsC,gBAAgB,wHAAwH,OAAO,uBAAuB,KAAK,KAAK,0CAA0C,WAAW,mYAAmY,4CAA4C,OAAO,6BAA6B,inBAAinB,gCAAgC,WAAW,uXAAuX,sCAAsC,OAAO,0BAA0B,w+BAAw+B,6BAA6B,WAAW,oaAAoa,kDAAkD,oLAAoL,2IAA2I,sGAAsG,WAAW,eAAe,gJAAgJ,gCAAgC,mBAAmB,yBAAyB,KAAK,OAAO,+CAA+C,wDAAwD,0CAA0C,kCAAkC,wHAAwH,UAAU,2BAA2B,0CAA0C,OAAO,EAAE,KAAK,IAAI,2BAA2B,mBAAmB,+BAA+B,qCAAqC,8DAA8D,iDAAiD,OAAO,EAAE,6CAA6C,uEAAuE,oCAAoC,6BAA6B,iBAAiB,yCAAyC,gDAAgD,mEAAmE,6CAA6C,0GAA0G,WAAW,YAAY,yBAAyB,4EAA4E,WAAW,SAAS,EAAE,OAAO,EAAE,2BAA2B,KAAK,iCAAiC,iDAAiD,4CAA4C,0FAA0F,yJAAyJ,wCAAwC,yCAAyC,gDAAgD,OAAO,uBAAuB,KAAK,KAAK,0CAA0C,+CAA+C,wHAAwH,+BAA+B,gEAAgE,kLAAkL,8BAA8B,sIAAsI,2XAA2X,mEAAmE,OAAO,2BAA2B,sMAAsM,8BAA8B,WAAW,gcAAgc,0IAA0I,iIAAiI,oIAAoI,yGAAyG,qBAAqB,0DAA0D,2BAA2B,WAAW,2bAA2b,sBAAsB,wJAAwJ,WAAW,4ZAA4Z,kDAAkD,8cAA8c,0BAA0B,uCAAuC,IAAI,2CAA2C,oDAAoD,qBAAqB,qBAAqB,sFAAsF,KAAK,wCAAwC,IAAI,kBAAkB,8BAA8B,mBAAmB,gBAAgB,+CAA+C,yCAAyC,gBAAgB,2CAA2C,kCAAkC,OAAO,KAAK,oBAAoB,IAAI,0BAA0B,yCAAyC,qBAAqB,yBAAyB,qBAAqB,yBAAyB,KAAK,iBAAiB,qBAAqB,KAAK,8DAA8D,iCAAiC,6CAA6C,4BAA4B,oBAAoB,mCAAmC,OAAO,8LAA8L,iDAAiD,OAAO,mBAAmB,MAAM,yCAAyC,4BAA4B,gCAAgC,OAAO,MAAM,sCAAsC,uBAAuB,4BAA4B,+MAA+M,OAAO,MAAM,WAAW,yCAAyC,yEAAyE,0CAA0C,sCAAsC,gCAAgC,UAAU,oEAAoE,+DAA+D,wCAAwC,eAAe,OAAO,4CAA4C,yDAAyD,eAAe,OAAO,gDAAgD,uCAAuC,EAAE,iTAAiT,KAAK,YAAY,uBAAuB,KAAK,IAAI,4BAA4B,8BAA8B,sIAAsI,geAAge,yRAAyR,iIAAiI,WAAW,gDAAgD,oIAAoI,qDAAqD,YAAY,uBAAuB,0BAA0B,wBAAwB,OAAO,sBAAsB,OAAO,sEAAsE,MAAM,+EAA+E,OAAO,uDAAuD,sDAAsD,cAAc,mEAAmE,KAAK,yCAAyC,cAAc,oEAAoE,KAAK,yBAAyB,cAAc,sIAAsI,KAAK,yBAAyB,cAAc,wDAAwD,KAAK,sEAAsE,IAAI,mHAAmH,kBAAkB,OAAO,gEAAgE,QAAQ,yGAAyG,sBAAsB,mEAAmE,4BAA4B,yCAAyC,KAAK,mGAAmG,wCAAwC,+BAA+B,iCAAiC,OAAO,KAAK,6BAA6B,wCAAwC,+BAA+B,gCAAgC,OAAO,KAAK,gCAAgC,wCAAwC,4CAA4C,gCAAgC,6BAA6B,KAAK,OAAO,6EAA6E,KAAK,oBAAoB,IAAI,sFAAsF,+GAA+G,qBAAqB,mBAAmB,OAAO,oDAAoD,KAAK,kBAAkB,qCAAqC,mDAAmD,OAAO,EAAE,KAAK,+CAA+C,IAAI,kBAAkB,OAAO,kBAAkB,mBAAmB,wBAAwB,8BAA8B,uEAAuE,kDAAkD,kBAAkB,+JAA+J,+BAA+B,sEAAsE,2BAA2B,oCAAoC,KAAK,wDAAwD,yCAAyC,oDAAoD,iBAAiB,OAAO,qDAAqD,2CAA2C,8CAA8C,6DAA6D,2BAA2B,8BAA8B,6DAA6D,uBAAuB,2BAA2B,OAAO,uCAAuC,uCAAuC,2BAA2B,sCAAsC,6DAA6D,4EAA4E,8DAA8D,uFAAuF,yDAAyD,SAAS,OAAO,8BAA8B,SAAS,OAAO,4EAA4E,yBAAyB,wIAAwI,kCAAkC,uDAAuD,gDAAgD,uHAAuH,KAAK,qCAAqC,kBAAkB,+BAA+B,uDAAuD,GAAG,0CAA0C,0BAA0B,oCAAoC,2CAA2C,OAAO,mCAAmC,KAAK,+BAA+B,IAAI,+CAA+C,uDAAuD,mEAAmE,0DAA0D,mDAAmD,IAAI,kBAAkB,OAAO,6BAA6B,eAAe,+CAA+C,kEAAkE,sBAAsB,oCAAoC,KAAK,cAAc,iDAAiD,IAAI,sBAAsB,0DAA0D,WAAW,maAAma,mKAAmK,OAAO,4BAA4B,OAAO,oDAAoD,gFAAgF,yCAAyC,IAAI,kBAAkB,OAAO,qDAAqD,OAAO,+EAA+E,sBAAsB,iDAAiD,WAAW,gUAAgU,4GAA4G,8dAA8d,sIAAsI,EAAE,+CAA+C,OAAO,oEAAoE,6HAA6H,4HAA4H,mBAAmB,SAAS,uBAAuB,OAAO,gCAAgC,8BAA8B,2GAA2G,OAAO,iBAAiB,KAAK,8KAA8K,EAAE,gDAAgD,QAAQ,0EAA0E,kEAAkE,qBAAqB,OAAO,wCAAwC,iJAAiJ,uBAAuB,SAAS,8DAA8D,OAAO,oEAAoE,KAAK,oDAAoD,EAAE,+CAA+C,OAAO,wEAAwE,2BAA2B,KAAK,yGAAyG,EAAE,2DAA2D,eAAe,4EAA4E,iDAAiD,yCAAyC,KAAK,0GAA0G,EAAE,4DAA4D,SAAS,8EAA8E,gBAAgB,yEAAyE,sCAAsC,4FAA4F,uEAAuE,OAAO,OAAO,yDAAyD,OAAO,qBAAqB,KAAK,uGAAuG,EAAE,oCAAoC,QAAQ,mGAAmG,gFAAgF,KAAK,sKAAsK,EAAE,0CAA0C,EAAE,6CAA6C,OAAO,4BAA4B,YAAY,2DAA2D,0BAA0B,0BAA0B,gDAAgD,iBAAiB,OAAO,8CAA8C,iBAAiB,OAAO,qCAAqC,oKAAoK,4CAA4C,wBAAwB,oBAAoB,SAAS,oBAAoB,mBAAmB,SAAS,mBAAmB,OAAO,kIAAkI,iBAAiB,OAAO,gDAAgD,KAAK,+FAA+F,EAAE,oCAAoC,QAAQ,wEAAwE,6EAA6E,yBAAyB,gEAAgE,SAAS,wFAAwF,OAAO,qCAAqC,8FAA8F,OAAO,oCAAoC,wGAAwG,OAAO,qBAAqB,KAAK,iCAAiC,uBAAuB,KAAK,6BAA6B,mBAAmB,KAAK,2QAA2Q,EAAE,8EAA8E,OAAO,0CAA0C,QAAQ,mEAAmE,gBAAgB,gHAAgH,sCAAsC,8BAA8B,+DAA+D,SAAS,iCAAiC,2BAA2B,0BAA0B,WAAW,qCAAqC,SAAS,kDAAkD,2BAA2B,0DAA0D,WAAW,qCAAqC,SAAS,OAAO,iDAAiD,0CAA0C,iCAAiC,OAAO,qBAAqB,KAAK,KAAK,0BAA0B,WAAW,+SAA+S,iBAAiB,wBAAwB,OAAO,4EAA4E,OAAO,gEAAgE,OAAO,kEAAkE,OAAO,gFAAgF,OAAO,4EAA4E,OAAO,iDAAiD,OAAO,sDAAsD,OAAO,uDAAuD,UAAU,+BAA+B,cAAc,8CAA8C,KAAK,eAAe,UAAU,mCAAmC,cAAc,oDAAoD,KAAK,sFAAsF,OAAO,gDAAgD,OAAO,8EAA8E,wBAAwB,gCAAgC,OAAO,+CAA+C,yEAAyE,iBAAiB,KAAK,oFAAoF,OAAO,8CAA8C,UAAU,QAAQ,kDAAkD,8CAA8C,qCAAqC,qCAAqC,oCAAoC,+BAA+B,cAAc,yEAAyE,KAAK,mGAAmG,QAAQ,qDAAqD,UAAU,2BAA2B,kDAAkD,sCAAsC,gCAAgC,+BAA+B,OAAO,yCAAyC,4BAA4B,oBAAoB,OAAO,+BAA+B,gBAAgB,qGAAqG,OAAO,6BAA6B,oCAAoC,oCAAoC,+BAA+B,gBAAgB,iFAAiF,OAAO,oBAAoB,KAAK,wEAAwE,UAAU,QAAQ,kDAAkD,iBAAiB,QAAQ,sEAAsE,yDAAyD,KAAK,oFAAoF,UAAU,QAAQ,kDAAkD,iBAAiB,QAAQ,wEAAwE,kDAAkD,KAAK,oGAAoG,QAAQ,oDAAoD,QAAQ,uEAAuE,qDAAqD,KAAK,gEAAgE,UAAU,QAAQ,oDAAoD,gBAAgB,UAAU,QAAQ,kDAAkD,sCAAsC,0BAA0B,0BAA0B,gDAAgD,gDAAgD,mCAAmC,2BAA2B,4BAA4B,gCAAgC,sCAAsC,YAAY,YAAY,YAAY,oBAAoB,+CAA+C,gBAAgB,gBAAgB,gBAAgB,iCAAiC,gBAAgB,gBAAgB,gBAAgB,iCAAiC,gBAAgB,gBAAgB,gBAAgB,iCAAiC,gBAAgB,gBAAgB,gBAAgB,iCAAiC,gBAAgB,gBAAgB,gBAAgB,iCAAiC,gBAAgB,gBAAgB,gBAAgB,OAAO,gBAAgB,oGAAoG,KAAK,gEAAgE,UAAU,QAAQ,kDAAkD,iBAAiB,UAAU,QAAQ,oDAAoD,qCAAqC,4BAA4B,4BAA4B,4BAA4B,4CAA4C,4CAA4C,+FAA+F,gBAAgB,sBAAsB,4DAA4D,gDAAgD,yCAAyC,wBAAwB,OAAO,gBAAgB,8CAA8C,KAAK,wEAAwE,UAAU,iEAAiE,UAAU,iEAAiE,OAAO,kHAAkH,UAAU,6EAA6E,sCAAsC,sCAAsC,sCAAsC,cAAc,gKAAgK,KAAK,KAAK,2BAA2B,WAAW,4TAA4T,oGAAoG,qBAAqB,iCAAiC,WAAW,4PAA4P,UAAU,uDAAuD,gBAAgB,GAAG,IAAI,SAAS,2FAA2F,GAAG,YAAY,uGAAuG,GAAG,sKAAsK,KAAK,uBAAuB,aAAa,eAAe,EAAE,gD","file":"scaffolding/vendors~iframe-extension-worker.js","sourcesContent":["const uid = require('../util/uid');\nconst frameSource = require('./tw-load-script-as-plain-text!./tw-iframe-extension-worker-entry');\n\nconst none = \"'none'\";\nconst featurePolicy = {\n    'accelerometer': none,\n    'ambient-light-sensor': none,\n    'battery': none,\n    'camera': none,\n    'display-capture': none,\n    'document-domain': none,\n    'encrypted-media': none,\n    'fullscreen': none,\n    'geolocation': none,\n    'gyroscope': none,\n    'magnetometer': none,\n    'microphone': none,\n    'midi': none,\n    'payment': none,\n    'picture-in-picture': none,\n    'publickey-credentials-get': none,\n    'speaker-selection': none,\n    'usb': none,\n    'vibrate': none,\n    'vr': none,\n    'screen-wake-lock': none,\n    'web-share': none,\n    'interest-cohort': none\n};\n\nconst generateAllow = () => Object.entries(featurePolicy)\n    .map(([name, permission]) => `${name} ${permission}`)\n    .join('; ');\n\nclass IframeExtensionWorker {\n    constructor () {\n        this.id = uid();\n        this.isRemote = true;\n        this.ready = false;\n        this.queuedMessages = [];\n\n        this.iframe = document.createElement('iframe');\n        this.iframe.className = 'tw-custom-extension-frame';\n        this.iframe.dataset.id = this.id;\n        this.iframe.style.display = 'none';\n        this.iframe.setAttribute('aria-hidden', 'true');\n        this.iframe.sandbox = 'allow-scripts';\n        this.iframe.allow = generateAllow();\n        document.body.appendChild(this.iframe);\n\n        window.addEventListener('message', this._onWindowMessage.bind(this));\n        const blob = new Blob([\n            // eslint-disable-next-line max-len\n            `<!DOCTYPE html><body><script>window.__WRAPPED_IFRAME_ID__=${JSON.stringify(this.id)};${frameSource}</script></body>`\n        ], {\n            type: 'text/html'\n        });\n        this.iframe.src = URL.createObjectURL(blob);\n    }\n\n    _onWindowMessage (e) {\n        if (!e.data || e.data.vmIframeId !== this.id) {\n            return;\n        }\n        if (e.data.ready) {\n            this.ready = true;\n            for (const {data, transfer} of this.queuedMessages) {\n                this.postMessage(data, transfer);\n            }\n            this.queuedMessages.length = 0;\n        }\n        if (e.data.message) {\n            this.onmessage({\n                data: e.data.message\n            });\n        }\n    }\n\n    onmessage () {\n        // Should be overridden\n    }\n\n    postMessage (data, transfer) {\n        if (this.ready) {\n            if (transfer) {\n                this.iframe.contentWindow.postMessage(data, '*', transfer);\n            } else {\n                this.iframe.contentWindow.postMessage(data, '*');\n            }\n        } else {\n            this.queuedMessages.push({data, transfer});\n        }\n    }\n}\n\nmodule.exports = IframeExtensionWorker;\n","module.exports = \"/******/ (function(modules) { // webpackBootstrap\\n/******/ \\t// The module cache\\n/******/ \\tvar installedModules = {};\\n/******/\\n/******/ \\t// The require function\\n/******/ \\tfunction __webpack_require__(moduleId) {\\n/******/\\n/******/ \\t\\t// Check if module is in cache\\n/******/ \\t\\tif(installedModules[moduleId]) {\\n/******/ \\t\\t\\treturn installedModules[moduleId].exports;\\n/******/ \\t\\t}\\n/******/ \\t\\t// Create a new module (and put it into the cache)\\n/******/ \\t\\tvar module = installedModules[moduleId] = {\\n/******/ \\t\\t\\ti: moduleId,\\n/******/ \\t\\t\\tl: false,\\n/******/ \\t\\t\\texports: {}\\n/******/ \\t\\t};\\n/******/\\n/******/ \\t\\t// Execute the module function\\n/******/ \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n/******/\\n/******/ \\t\\t// Flag the module as loaded\\n/******/ \\t\\tmodule.l = true;\\n/******/\\n/******/ \\t\\t// Return the exports of the module\\n/******/ \\t\\treturn module.exports;\\n/******/ \\t}\\n/******/\\n/******/\\n/******/ \\t// expose the modules object (__webpack_modules__)\\n/******/ \\t__webpack_require__.m = modules;\\n/******/\\n/******/ \\t// expose the module cache\\n/******/ \\t__webpack_require__.c = installedModules;\\n/******/\\n/******/ \\t// define getter function for harmony exports\\n/******/ \\t__webpack_require__.d = function(exports, name, getter) {\\n/******/ \\t\\tif(!__webpack_require__.o(exports, name)) {\\n/******/ \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n/******/ \\t\\t}\\n/******/ \\t};\\n/******/\\n/******/ \\t// define __esModule on exports\\n/******/ \\t__webpack_require__.r = function(exports) {\\n/******/ \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n/******/ \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n/******/ \\t\\t}\\n/******/ \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n/******/ \\t};\\n/******/\\n/******/ \\t// create a fake namespace object\\n/******/ \\t// mode & 1: value is a module id, require it\\n/******/ \\t// mode & 2: merge all properties of value into the ns\\n/******/ \\t// mode & 4: return value when already ns object\\n/******/ \\t// mode & 8|1: behave like require\\n/******/ \\t__webpack_require__.t = function(value, mode) {\\n/******/ \\t\\tif(mode & 1) value = __webpack_require__(value);\\n/******/ \\t\\tif(mode & 8) return value;\\n/******/ \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n/******/ \\t\\tvar ns = Object.create(null);\\n/******/ \\t\\t__webpack_require__.r(ns);\\n/******/ \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n/******/ \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n/******/ \\t\\treturn ns;\\n/******/ \\t};\\n/******/\\n/******/ \\t// getDefaultExport function for compatibility with non-harmony modules\\n/******/ \\t__webpack_require__.n = function(module) {\\n/******/ \\t\\tvar getter = module && module.__esModule ?\\n/******/ \\t\\t\\tfunction getDefault() { return module['default']; } :\\n/******/ \\t\\t\\tfunction getModuleExports() { return module; };\\n/******/ \\t\\t__webpack_require__.d(getter, 'a', getter);\\n/******/ \\t\\treturn getter;\\n/******/ \\t};\\n/******/\\n/******/ \\t// Object.prototype.hasOwnProperty.call\\n/******/ \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n/******/\\n/******/ \\t// __webpack_public_path__\\n/******/ \\t__webpack_require__.p = \\\"\\\";\\n/******/\\n/******/\\n/******/ \\t// Load entry module and return exports\\n/******/ \\treturn __webpack_require__(__webpack_require__.s = \\\"./node_modules/babel-loader/lib/index.js?!./node_modules/scratch-vm/src/extension-support/tw-iframe-extension-worker-entry.js\\\");\\n/******/ })\\n/************************************************************************/\\n/******/ ({\\n\\n/***/ \\\"./node_modules/babel-loader/lib/index.js?!./node_modules/scratch-vm/src/extension-support/tw-iframe-extension-worker-entry.js\\\":\\n/*!***********************************************************************************************************************************!*\\\\\\n  !*** ./node_modules/babel-loader/lib??ref--4!./node_modules/scratch-vm/src/extension-support/tw-iframe-extension-worker-entry.js ***!\\n  \\\\***********************************************************************************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n/* WEBPACK VAR INJECTION */(function(global) {const context = __webpack_require__(/*! ./tw-extension-worker-context */ \\\"./node_modules/scratch-vm/src/extension-support/tw-extension-worker-context.js\\\");\\n\\nconst jQuery = __webpack_require__(/*! ./tw-jquery-shim */ \\\"./node_modules/scratch-vm/src/extension-support/tw-jquery-shim.js\\\");\\n\\nglobal.$ = jQuery;\\nglobal.jQuery = jQuery;\\nconst id = window.__WRAPPED_IFRAME_ID__;\\ncontext.isWorker = false;\\ncontext.centralDispatchService = {\\n  postMessage(message, transfer) {\\n    const data = {\\n      vmIframeId: id,\\n      message\\n    };\\n\\n    if (transfer) {\\n      window.parent.postMessage(data, '*', transfer);\\n    } else {\\n      window.parent.postMessage(data, '*');\\n    }\\n  }\\n\\n};\\n\\n__webpack_require__(/*! ./extension-worker */ \\\"./node_modules/scratch-vm/src/extension-support/extension-worker.js\\\");\\n\\nwindow.parent.postMessage({\\n  vmIframeId: id,\\n  ready: true\\n}, '*');\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \\\"./node_modules/webpack/buildin/global.js\\\")))\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/microee/index.js\\\":\\n/*!***************************************!*\\\\\\n  !*** ./node_modules/microee/index.js ***!\\n  \\\\***************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\nfunction M() { this._events = {}; }\\nM.prototype = {\\n  on: function(ev, cb) {\\n    this._events || (this._events = {});\\n    var e = this._events;\\n    (e[ev] || (e[ev] = [])).push(cb);\\n    return this;\\n  },\\n  removeListener: function(ev, cb) {\\n    var e = this._events[ev] || [], i;\\n    for(i = e.length-1; i >= 0 && e[i]; i--){\\n      if(e[i] === cb || e[i].cb === cb) { e.splice(i, 1); }\\n    }\\n  },\\n  removeAllListeners: function(ev) {\\n    if(!ev) { this._events = {}; }\\n    else { this._events[ev] && (this._events[ev] = []); }\\n  },\\n  listeners: function(ev) {\\n    return (this._events ? this._events[ev] || [] : []);\\n  },\\n  emit: function(ev) {\\n    this._events || (this._events = {});\\n    var args = Array.prototype.slice.call(arguments, 1), i, e = this._events[ev] || [];\\n    for(i = e.length-1; i >= 0 && e[i]; i--){\\n      e[i].apply(this, args);\\n    }\\n    return this;\\n  },\\n  when: function(ev, cb) {\\n    return this.once(ev, cb, true);\\n  },\\n  once: function(ev, cb, when) {\\n    if(!cb) return this;\\n    function c() {\\n      if(!when) this.removeListener(ev, c);\\n      if(cb.apply(this, arguments) && when) this.removeListener(ev, c);\\n    }\\n    c.cb = cb;\\n    this.on(ev, c);\\n    return this;\\n  }\\n};\\nM.mixin = function(dest) {\\n  var o = M.prototype, k;\\n  for (k in o) {\\n    o.hasOwnProperty(k) && (dest.prototype[k] = o[k]);\\n  }\\n};\\nmodule.exports = M;\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/minilog/lib/common/filter.js\\\":\\n/*!***************************************************!*\\\\\\n  !*** ./node_modules/minilog/lib/common/filter.js ***!\\n  \\\\***************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n// default filter\\nvar Transform = __webpack_require__(/*! ./transform.js */ \\\"./node_modules/minilog/lib/common/transform.js\\\");\\n\\nvar levelMap = { debug: 1, info: 2, warn: 3, error: 4 };\\n\\nfunction Filter() {\\n  this.enabled = true;\\n  this.defaultResult = true;\\n  this.clear();\\n}\\n\\nTransform.mixin(Filter);\\n\\n// allow all matching, with level >= given level\\nFilter.prototype.allow = function(name, level) {\\n  this._white.push({ n: name, l: levelMap[level] });\\n  return this;\\n};\\n\\n// deny all matching, with level <= given level\\nFilter.prototype.deny = function(name, level) {\\n  this._black.push({ n: name, l: levelMap[level] });\\n  return this;\\n};\\n\\nFilter.prototype.clear = function() {\\n  this._white = [];\\n  this._black = [];\\n  return this;\\n};\\n\\nfunction test(rule, name) {\\n  // use .test for RegExps\\n  return (rule.n.test ? rule.n.test(name) : rule.n == name);\\n};\\n\\nFilter.prototype.test = function(name, level) {\\n  var i, len = Math.max(this._white.length, this._black.length);\\n  for(i = 0; i < len; i++) {\\n    if(this._white[i] && test(this._white[i], name) && levelMap[level] >= this._white[i].l) {\\n      return true;\\n    }\\n    if(this._black[i] && test(this._black[i], name) && levelMap[level] <= this._black[i].l) {\\n      return false;\\n    }\\n  }\\n  return this.defaultResult;\\n};\\n\\nFilter.prototype.write = function(name, level, args) {\\n  if(!this.enabled || this.test(name, level)) {\\n    return this.emit('item', name, level, args);\\n  }\\n};\\n\\nmodule.exports = Filter;\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/minilog/lib/common/minilog.js\\\":\\n/*!****************************************************!*\\\\\\n  !*** ./node_modules/minilog/lib/common/minilog.js ***!\\n  \\\\****************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\nvar Transform = __webpack_require__(/*! ./transform.js */ \\\"./node_modules/minilog/lib/common/transform.js\\\"),\\n    Filter = __webpack_require__(/*! ./filter.js */ \\\"./node_modules/minilog/lib/common/filter.js\\\");\\n\\nvar log = new Transform(),\\n    slice = Array.prototype.slice;\\n\\nexports = module.exports = function create(name) {\\n  var o   = function() { log.write(name, undefined, slice.call(arguments)); return o; };\\n  o.debug = function() { log.write(name, 'debug', slice.call(arguments)); return o; };\\n  o.info  = function() { log.write(name, 'info',  slice.call(arguments)); return o; };\\n  o.warn  = function() { log.write(name, 'warn',  slice.call(arguments)); return o; };\\n  o.error = function() { log.write(name, 'error', slice.call(arguments)); return o; };\\n  o.log   = o.debug; // for interface compliance with Node and browser consoles\\n  o.suggest = exports.suggest;\\n  o.format = log.format;\\n  return o;\\n};\\n\\n// filled in separately\\nexports.defaultBackend = exports.defaultFormatter = null;\\n\\nexports.pipe = function(dest) {\\n  return log.pipe(dest);\\n};\\n\\nexports.end = exports.unpipe = exports.disable = function(from) {\\n  return log.unpipe(from);\\n};\\n\\nexports.Transform = Transform;\\nexports.Filter = Filter;\\n// this is the default filter that's applied when .enable() is called normally\\n// you can bypass it completely and set up your own pipes\\nexports.suggest = new Filter();\\n\\nexports.enable = function() {\\n  if(exports.defaultFormatter) {\\n    return log.pipe(exports.suggest) // filter\\n              .pipe(exports.defaultFormatter) // formatter\\n              .pipe(exports.defaultBackend); // backend\\n  }\\n  return log.pipe(exports.suggest) // filter\\n            .pipe(exports.defaultBackend); // formatter\\n};\\n\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/minilog/lib/common/transform.js\\\":\\n/*!******************************************************!*\\\\\\n  !*** ./node_modules/minilog/lib/common/transform.js ***!\\n  \\\\******************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\nvar microee = __webpack_require__(/*! microee */ \\\"./node_modules/microee/index.js\\\");\\n\\n// Implements a subset of Node's stream.Transform - in a cross-platform manner.\\nfunction Transform() {}\\n\\nmicroee.mixin(Transform);\\n\\n// The write() signature is different from Node's\\n// --> makes it much easier to work with objects in logs.\\n// One of the lessons from v1 was that it's better to target\\n// a good browser rather than the lowest common denominator\\n// internally.\\n// If you want to use external streams, pipe() to ./stringify.js first.\\nTransform.prototype.write = function(name, level, args) {\\n  this.emit('item', name, level, args);\\n};\\n\\nTransform.prototype.end = function() {\\n  this.emit('end');\\n  this.removeAllListeners();\\n};\\n\\nTransform.prototype.pipe = function(dest) {\\n  var s = this;\\n  // prevent double piping\\n  s.emit('unpipe', dest);\\n  // tell the dest that it's being piped to\\n  dest.emit('pipe', s);\\n\\n  function onItem() {\\n    dest.write.apply(dest, Array.prototype.slice.call(arguments));\\n  }\\n  function onEnd() { !dest._isStdio && dest.end(); }\\n\\n  s.on('item', onItem);\\n  s.on('end', onEnd);\\n\\n  s.when('unpipe', function(from) {\\n    var match = (from === dest) || typeof from == 'undefined';\\n    if(match) {\\n      s.removeListener('item', onItem);\\n      s.removeListener('end', onEnd);\\n      dest.emit('unpipe');\\n    }\\n    return match;\\n  });\\n\\n  return dest;\\n};\\n\\nTransform.prototype.unpipe = function(from) {\\n  this.emit('unpipe', from);\\n  return this;\\n};\\n\\nTransform.prototype.format = function(dest) {\\n  throw new Error([\\n    'Warning: .format() is deprecated in Minilog v2! Use .pipe() instead. For example:',\\n    'var Minilog = require(\\\\'minilog\\\\');',\\n    'Minilog',\\n    '  .pipe(Minilog.backends.console.formatClean)',\\n    '  .pipe(Minilog.backends.console);'].join('\\\\n'));\\n};\\n\\nTransform.mixin = function(dest) {\\n  var o = Transform.prototype, k;\\n  for (k in o) {\\n    o.hasOwnProperty(k) && (dest.prototype[k] = o[k]);\\n  }\\n};\\n\\nmodule.exports = Transform;\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/minilog/lib/web/array.js\\\":\\n/*!***********************************************!*\\\\\\n  !*** ./node_modules/minilog/lib/web/array.js ***!\\n  \\\\***********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\nvar Transform = __webpack_require__(/*! ../common/transform.js */ \\\"./node_modules/minilog/lib/common/transform.js\\\"),\\n    cache = [ ];\\n\\nvar logger = new Transform();\\n\\nlogger.write = function(name, level, args) {\\n  cache.push([ name, level, args ]);\\n};\\n\\n// utility functions\\nlogger.get = function() { return cache; };\\nlogger.empty = function() { cache = []; };\\n\\nmodule.exports = logger;\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/minilog/lib/web/console.js\\\":\\n/*!*************************************************!*\\\\\\n  !*** ./node_modules/minilog/lib/web/console.js ***!\\n  \\\\*************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\nvar Transform = __webpack_require__(/*! ../common/transform.js */ \\\"./node_modules/minilog/lib/common/transform.js\\\");\\n\\nvar newlines = /\\\\n+$/,\\n    logger = new Transform();\\n\\nlogger.write = function(name, level, args) {\\n  var i = args.length-1;\\n  if (typeof console === 'undefined' || !console.log) {\\n    return;\\n  }\\n  if(console.log.apply) {\\n    return console.log.apply(console, [name, level].concat(args));\\n  } else if(JSON && JSON.stringify) {\\n    // console.log.apply is undefined in IE8 and IE9\\n    // for IE8/9: make console.log at least a bit less awful\\n    if(args[i] && typeof args[i] == 'string') {\\n      args[i] = args[i].replace(newlines, '');\\n    }\\n    try {\\n      for(i = 0; i < args.length; i++) {\\n        args[i] = JSON.stringify(args[i]);\\n      }\\n    } catch(e) {}\\n    console.log(args.join(' '));\\n  }\\n};\\n\\nlogger.formatters = ['color', 'minilog'];\\nlogger.color = __webpack_require__(/*! ./formatters/color.js */ \\\"./node_modules/minilog/lib/web/formatters/color.js\\\");\\nlogger.minilog = __webpack_require__(/*! ./formatters/minilog.js */ \\\"./node_modules/minilog/lib/web/formatters/minilog.js\\\");\\n\\nmodule.exports = logger;\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/minilog/lib/web/formatters/color.js\\\":\\n/*!**********************************************************!*\\\\\\n  !*** ./node_modules/minilog/lib/web/formatters/color.js ***!\\n  \\\\**********************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\nvar Transform = __webpack_require__(/*! ../../common/transform.js */ \\\"./node_modules/minilog/lib/common/transform.js\\\"),\\n    color = __webpack_require__(/*! ./util.js */ \\\"./node_modules/minilog/lib/web/formatters/util.js\\\");\\n\\nvar colors = { debug: ['cyan'], info: ['purple' ], warn: [ 'yellow', true ], error: [ 'red', true ] },\\n    logger = new Transform();\\n\\nlogger.write = function(name, level, args) {\\n  var fn = console.log;\\n  if(console[level] && console[level].apply) {\\n    fn = console[level];\\n    fn.apply(console, [ '%c'+name+' %c'+level, color('gray'), color.apply(color, colors[level])].concat(args));\\n  }\\n};\\n\\n// NOP, because piping the formatted logs can only cause trouble.\\nlogger.pipe = function() { };\\n\\nmodule.exports = logger;\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/minilog/lib/web/formatters/minilog.js\\\":\\n/*!************************************************************!*\\\\\\n  !*** ./node_modules/minilog/lib/web/formatters/minilog.js ***!\\n  \\\\************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\nvar Transform = __webpack_require__(/*! ../../common/transform.js */ \\\"./node_modules/minilog/lib/common/transform.js\\\"),\\n    color = __webpack_require__(/*! ./util.js */ \\\"./node_modules/minilog/lib/web/formatters/util.js\\\"),\\n    colors = { debug: ['gray'], info: ['purple' ], warn: [ 'yellow', true ], error: [ 'red', true ] },\\n    logger = new Transform();\\n\\nlogger.write = function(name, level, args) {\\n  var fn = console.log;\\n  if(level != 'debug' && console[level]) {\\n    fn = console[level];\\n  }\\n\\n  var subset = [], i = 0;\\n  if(level != 'info') {\\n    for(; i < args.length; i++) {\\n      if(typeof args[i] != 'string') break;\\n    }\\n    fn.apply(console, [ '%c'+name +' '+ args.slice(0, i).join(' '), color.apply(color, colors[level]) ].concat(args.slice(i)));\\n  } else {\\n    fn.apply(console, [ '%c'+name, color.apply(color, colors[level]) ].concat(args));\\n  }\\n};\\n\\n// NOP, because piping the formatted logs can only cause trouble.\\nlogger.pipe = function() { };\\n\\nmodule.exports = logger;\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/minilog/lib/web/formatters/util.js\\\":\\n/*!*********************************************************!*\\\\\\n  !*** ./node_modules/minilog/lib/web/formatters/util.js ***!\\n  \\\\*********************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\nvar hex = {\\n  black: '#000',\\n  red: '#c23621',\\n  green: '#25bc26',\\n  yellow: '#bbbb00',\\n  blue:  '#492ee1',\\n  magenta: '#d338d3',\\n  cyan: '#33bbc8',\\n  gray: '#808080',\\n  purple: '#708'\\n};\\nfunction color(fg, isInverse) {\\n  if(isInverse) {\\n    return 'color: #fff; background: '+hex[fg]+';';\\n  } else {\\n    return 'color: '+hex[fg]+';';\\n  }\\n}\\n\\nmodule.exports = color;\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/minilog/lib/web/index.js\\\":\\n/*!***********************************************!*\\\\\\n  !*** ./node_modules/minilog/lib/web/index.js ***!\\n  \\\\***********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\nvar Minilog = __webpack_require__(/*! ../common/minilog.js */ \\\"./node_modules/minilog/lib/common/minilog.js\\\");\\n\\nvar oldEnable = Minilog.enable,\\n    oldDisable = Minilog.disable,\\n    isChrome = (typeof navigator != 'undefined' && /chrome/i.test(navigator.userAgent)),\\n    console = __webpack_require__(/*! ./console.js */ \\\"./node_modules/minilog/lib/web/console.js\\\");\\n\\n// Use a more capable logging backend if on Chrome\\nMinilog.defaultBackend = (isChrome ? console.minilog : console);\\n\\n// apply enable inputs from localStorage and from the URL\\nif(typeof window != 'undefined') {\\n  try {\\n    Minilog.enable(JSON.parse(window.localStorage['minilogSettings']));\\n  } catch(e) {}\\n  if(window.location && window.location.search) {\\n    var match = RegExp('[?&]minilog=([^&]*)').exec(window.location.search);\\n    match && Minilog.enable(decodeURIComponent(match[1]));\\n  }\\n}\\n\\n// Make enable also add to localStorage\\nMinilog.enable = function() {\\n  oldEnable.call(Minilog, true);\\n  try { window.localStorage['minilogSettings'] = JSON.stringify(true); } catch(e) {}\\n  return this;\\n};\\n\\nMinilog.disable = function() {\\n  oldDisable.call(Minilog);\\n  try { delete window.localStorage.minilogSettings; } catch(e) {}\\n  return this;\\n};\\n\\nexports = module.exports = Minilog;\\n\\nexports.backends = {\\n  array: __webpack_require__(/*! ./array.js */ \\\"./node_modules/minilog/lib/web/array.js\\\"),\\n  browser: Minilog.defaultBackend,\\n  localStorage: __webpack_require__(/*! ./localstorage.js */ \\\"./node_modules/minilog/lib/web/localstorage.js\\\"),\\n  jQuery: __webpack_require__(/*! ./jquery_simple.js */ \\\"./node_modules/minilog/lib/web/jquery_simple.js\\\")\\n};\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/minilog/lib/web/jquery_simple.js\\\":\\n/*!*******************************************************!*\\\\\\n  !*** ./node_modules/minilog/lib/web/jquery_simple.js ***!\\n  \\\\*******************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\nvar Transform = __webpack_require__(/*! ../common/transform.js */ \\\"./node_modules/minilog/lib/common/transform.js\\\");\\n\\nvar cid = new Date().valueOf().toString(36);\\n\\nfunction AjaxLogger(options) {\\n  this.url = options.url || '';\\n  this.cache = [];\\n  this.timer = null;\\n  this.interval = options.interval || 30*1000;\\n  this.enabled = true;\\n  this.jQuery = window.jQuery;\\n  this.extras = {};\\n}\\n\\nTransform.mixin(AjaxLogger);\\n\\nAjaxLogger.prototype.write = function(name, level, args) {\\n  if(!this.timer) { this.init(); }\\n  this.cache.push([name, level].concat(args));\\n};\\n\\nAjaxLogger.prototype.init = function() {\\n  if(!this.enabled || !this.jQuery) return;\\n  var self = this;\\n  this.timer = setTimeout(function() {\\n    var i, logs = [], ajaxData, url = self.url;\\n    if(self.cache.length == 0) return self.init();\\n    // Test each log line and only log the ones that are valid (e.g. don't have circular references).\\n    // Slight performance hit but benefit is we log all valid lines.\\n    for(i = 0; i < self.cache.length; i++) {\\n      try {\\n        JSON.stringify(self.cache[i]);\\n        logs.push(self.cache[i]);\\n      } catch(e) { }\\n    }\\n    if(self.jQuery.isEmptyObject(self.extras)) {\\n        ajaxData = JSON.stringify({ logs: logs });\\n        url = self.url + '?client_id=' + cid;\\n    } else {\\n        ajaxData = JSON.stringify(self.jQuery.extend({logs: logs}, self.extras));\\n    }\\n\\n    self.jQuery.ajax(url, {\\n      type: 'POST',\\n      cache: false,\\n      processData: false,\\n      data: ajaxData,\\n      contentType: 'application/json',\\n      timeout: 10000\\n    }).success(function(data, status, jqxhr) {\\n      if(data.interval) {\\n        self.interval = Math.max(1000, data.interval);\\n      }\\n    }).error(function() {\\n      self.interval = 30000;\\n    }).always(function() {\\n      self.init();\\n    });\\n    self.cache = [];\\n  }, this.interval);\\n};\\n\\nAjaxLogger.prototype.end = function() {};\\n\\n// wait until jQuery is defined. Useful if you don't control the load order.\\nAjaxLogger.jQueryWait = function(onDone) {\\n  if(typeof window !== 'undefined' && (window.jQuery || window.$)) {\\n    return onDone(window.jQuery || window.$);\\n  } else if (typeof window !== 'undefined') {\\n    setTimeout(function() { AjaxLogger.jQueryWait(onDone); }, 200);\\n  }\\n};\\n\\nmodule.exports = AjaxLogger;\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/minilog/lib/web/localstorage.js\\\":\\n/*!******************************************************!*\\\\\\n  !*** ./node_modules/minilog/lib/web/localstorage.js ***!\\n  \\\\******************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\nvar Transform = __webpack_require__(/*! ../common/transform.js */ \\\"./node_modules/minilog/lib/common/transform.js\\\"),\\n    cache = false;\\n\\nvar logger = new Transform();\\n\\nlogger.write = function(name, level, args) {\\n  if(typeof window == 'undefined' || typeof JSON == 'undefined' || !JSON.stringify || !JSON.parse) return;\\n  try {\\n    if(!cache) { cache = (window.localStorage.minilog ? JSON.parse(window.localStorage.minilog) : []); }\\n    cache.push([ new Date().toString(), name, level, args ]);\\n    window.localStorage.minilog = JSON.stringify(cache);\\n  } catch(e) {}\\n};\\n\\nmodule.exports = logger;\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/scratch-vm/src/dispatch/shared-dispatch.js\\\":\\n/*!*****************************************************************!*\\\\\\n  !*** ./node_modules/scratch-vm/src/dispatch/shared-dispatch.js ***!\\n  \\\\*****************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\nconst log = __webpack_require__(/*! ../util/log */ \\\"./node_modules/scratch-vm/src/util/log.js\\\");\\n/**\\n * @typedef {object} DispatchCallMessage - a message to the dispatch system representing a service method call\\n * @property {*} responseId - send a response message with this response ID. See {@link DispatchResponseMessage}\\n * @property {string} service - the name of the service to be called\\n * @property {string} method - the name of the method to be called\\n * @property {Array|undefined} args - the arguments to be passed to the method\\n */\\n\\n/**\\n * @typedef {object} DispatchResponseMessage - a message to the dispatch system representing the results of a call\\n * @property {*} responseId - a copy of the response ID from the call which generated this response\\n * @property {*|undefined} error - if this is truthy, then it contains results from a failed call (such as an exception)\\n * @property {*|undefined} result - if error is not truthy, then this contains the return value of the call (if any)\\n */\\n\\n/**\\n * @typedef {DispatchCallMessage|DispatchResponseMessage} DispatchMessage\\n * Any message to the dispatch system.\\n */\\n\\n/**\\n * The SharedDispatch class is responsible for dispatch features shared by\\n * {@link CentralDispatch} and {@link WorkerDispatch}.\\n */\\n\\n\\nclass SharedDispatch {\\n  constructor() {\\n    /**\\n     * List of callback registrations for promises waiting for a response from a call to a service on another\\n     * worker. A callback registration is an array of [resolve,reject] Promise functions.\\n     * Calls to local services don't enter this list.\\n     * @type {Array.<Function[]>}\\n     */\\n    this.callbacks = [];\\n    /**\\n     * The next response ID to be used.\\n     * @type {int}\\n     */\\n\\n    this.nextResponseId = 0;\\n  }\\n  /**\\n   * Call a particular method on a particular service, regardless of whether that service is provided locally or on\\n   * a worker. If the service is provided by a worker, the `args` will be copied using the Structured Clone\\n   * algorithm, except for any items which are also in the `transfer` list. Ownership of those items will be\\n   * transferred to the worker, and they should not be used after this call.\\n   * @example\\n   *      dispatcher.call('vm', 'setData', 'cat', 42);\\n   *      // this finds the worker for the 'vm' service, then on that worker calls:\\n   *      vm.setData('cat', 42);\\n   * @param {string} service - the name of the service.\\n   * @param {string} method - the name of the method.\\n   * @param {*} [args] - the arguments to be copied to the method, if any.\\n   * @returns {Promise} - a promise for the return value of the service method.\\n   */\\n\\n\\n  call(service, method) {\\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\\n      args[_key - 2] = arguments[_key];\\n    }\\n\\n    return this.transferCall(service, method, null, ...args);\\n  }\\n  /**\\n   * Call a particular method on a particular service, regardless of whether that service is provided locally or on\\n   * a worker. If the service is provided by a worker, the `args` will be copied using the Structured Clone\\n   * algorithm, except for any items which are also in the `transfer` list. Ownership of those items will be\\n   * transferred to the worker, and they should not be used after this call.\\n   * @example\\n   *      dispatcher.transferCall('vm', 'setData', [myArrayBuffer], 'cat', myArrayBuffer);\\n   *      // this finds the worker for the 'vm' service, transfers `myArrayBuffer` to it, then on that worker calls:\\n   *      vm.setData('cat', myArrayBuffer);\\n   * @param {string} service - the name of the service.\\n   * @param {string} method - the name of the method.\\n   * @param {Array} [transfer] - objects to be transferred instead of copied. Must be present in `args` to be useful.\\n   * @param {*} [args] - the arguments to be copied to the method, if any.\\n   * @returns {Promise} - a promise for the return value of the service method.\\n   */\\n\\n\\n  transferCall(service, method, transfer) {\\n    try {\\n      const {\\n        provider,\\n        isRemote\\n      } = this._getServiceProvider(service);\\n\\n      if (provider) {\\n        for (var _len2 = arguments.length, args = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\\n          args[_key2 - 3] = arguments[_key2];\\n        }\\n\\n        if (isRemote) {\\n          return this._remoteTransferCall(provider, service, method, transfer, ...args);\\n        }\\n\\n        const result = provider[method].apply(provider, args);\\n        return Promise.resolve(result);\\n      }\\n\\n      return Promise.reject(new Error(\\\"Service not found: \\\".concat(service)));\\n    } catch (e) {\\n      return Promise.reject(e);\\n    }\\n  }\\n  /**\\n   * Check if a particular service lives on another worker.\\n   * @param {string} service - the service to check.\\n   * @returns {boolean} - true if the service is remote (calls must cross a Worker boundary), false otherwise.\\n   * @private\\n   */\\n\\n\\n  _isRemoteService(service) {\\n    return this._getServiceProvider(service).isRemote;\\n  }\\n  /**\\n   * Like {@link call}, but force the call to be posted through a particular communication channel.\\n   * @param {object} provider - send the call through this object's `postMessage` function.\\n   * @param {string} service - the name of the service.\\n   * @param {string} method - the name of the method.\\n   * @param {*} [args] - the arguments to be copied to the method, if any.\\n   * @returns {Promise} - a promise for the return value of the service method.\\n   */\\n\\n\\n  _remoteCall(provider, service, method) {\\n    for (var _len3 = arguments.length, args = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\\n      args[_key3 - 3] = arguments[_key3];\\n    }\\n\\n    return this._remoteTransferCall(provider, service, method, null, ...args);\\n  }\\n  /**\\n   * Like {@link transferCall}, but force the call to be posted through a particular communication channel.\\n   * @param {object} provider - send the call through this object's `postMessage` function.\\n   * @param {string} service - the name of the service.\\n   * @param {string} method - the name of the method.\\n   * @param {Array} [transfer] - objects to be transferred instead of copied. Must be present in `args` to be useful.\\n   * @param {*} [args] - the arguments to be copied to the method, if any.\\n   * @returns {Promise} - a promise for the return value of the service method.\\n   */\\n\\n\\n  _remoteTransferCall(provider, service, method, transfer) {\\n    for (var _len4 = arguments.length, args = new Array(_len4 > 4 ? _len4 - 4 : 0), _key4 = 4; _key4 < _len4; _key4++) {\\n      args[_key4 - 4] = arguments[_key4];\\n    }\\n\\n    return new Promise((resolve, reject) => {\\n      const responseId = this._storeCallbacks(resolve, reject);\\n      /** @TODO: remove this hack! this is just here so we don't try to send `util` to a worker */\\n      // tw: upstream's logic is broken\\n      // Args is actually a 3 length list of [args, util, real block info]\\n      // We only want to send args. The others will throw errors when they try to be cloned\\n\\n\\n      if (args.length > 0 && typeof args[args.length - 1].func === 'function') {\\n        args.pop();\\n        args.pop();\\n      }\\n\\n      if (transfer) {\\n        provider.postMessage({\\n          service,\\n          method,\\n          responseId,\\n          args\\n        }, transfer);\\n      } else {\\n        provider.postMessage({\\n          service,\\n          method,\\n          responseId,\\n          args\\n        });\\n      }\\n    });\\n  }\\n  /**\\n   * Store callback functions pending a response message.\\n   * @param {Function} resolve - function to call if the service method returns.\\n   * @param {Function} reject - function to call if the service method throws.\\n   * @returns {*} - a unique response ID for this set of callbacks. See {@link _deliverResponse}.\\n   * @protected\\n   */\\n\\n\\n  _storeCallbacks(resolve, reject) {\\n    const responseId = this.nextResponseId++;\\n    this.callbacks[responseId] = [resolve, reject];\\n    return responseId;\\n  }\\n  /**\\n   * Deliver call response from a worker. This should only be called as the result of a message from a worker.\\n   * @param {int} responseId - the response ID of the callback set to call.\\n   * @param {DispatchResponseMessage} message - the message containing the response value(s).\\n   * @protected\\n   */\\n\\n\\n  _deliverResponse(responseId, message) {\\n    try {\\n      const [resolve, reject] = this.callbacks[responseId];\\n      delete this.callbacks[responseId];\\n\\n      if (message.error) {\\n        reject(message.error);\\n      } else {\\n        resolve(message.result);\\n      }\\n    } catch (e) {\\n      log.error(\\\"Dispatch callback failed: \\\".concat(e));\\n    }\\n  }\\n  /**\\n   * Handle a message event received from a connected worker.\\n   * @param {Worker} worker - the worker which sent the message, or the global object if running in a worker.\\n   * @param {MessageEvent} event - the message event to be handled.\\n   * @protected\\n   */\\n\\n\\n  _onMessage(worker, event) {\\n    /** @type {DispatchMessage} */\\n    const message = event.data;\\n    message.args = message.args || [];\\n    let promise;\\n\\n    if (message.service) {\\n      if (message.service === 'dispatch') {\\n        promise = this._onDispatchMessage(worker, message);\\n      } else {\\n        promise = this.call(message.service, message.method, ...message.args);\\n      }\\n    } else if (typeof message.responseId === 'undefined') {\\n      log.error(\\\"Dispatch caught malformed message from a worker: \\\".concat(JSON.stringify(event)));\\n    } else {\\n      this._deliverResponse(message.responseId, message);\\n    }\\n\\n    if (promise) {\\n      if (typeof message.responseId === 'undefined') {\\n        log.error(\\\"Dispatch message missing required response ID: \\\".concat(JSON.stringify(event)));\\n      } else {\\n        promise.then(result => worker.postMessage({\\n          responseId: message.responseId,\\n          result\\n        }), error => worker.postMessage({\\n          responseId: message.responseId,\\n          error: \\\"\\\".concat(error)\\n        }));\\n      }\\n    }\\n  }\\n  /**\\n   * Fetch the service provider object for a particular service name.\\n   * @abstract\\n   * @param {string} service - the name of the service to look up\\n   * @returns {{provider:(object|Worker), isRemote:boolean}} - the means to contact the service, if found\\n   * @protected\\n   */\\n\\n\\n  _getServiceProvider(service) {\\n    throw new Error(\\\"Could not get provider for \\\".concat(service, \\\": _getServiceProvider not implemented\\\"));\\n  }\\n  /**\\n   * Handle a call message sent to the dispatch service itself\\n   * @abstract\\n   * @param {Worker} worker - the worker which sent the message.\\n   * @param {DispatchCallMessage} message - the message to be handled.\\n   * @returns {Promise|undefined} - a promise for the results of this operation, if appropriate\\n   * @private\\n   */\\n\\n\\n  _onDispatchMessage(worker, message) {\\n    throw new Error(\\\"Unimplemented dispatch message handler cannot handle \\\".concat(message.method, \\\" method\\\"));\\n  }\\n\\n}\\n\\nmodule.exports = SharedDispatch;\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/scratch-vm/src/dispatch/worker-dispatch.js\\\":\\n/*!*****************************************************************!*\\\\\\n  !*** ./node_modules/scratch-vm/src/dispatch/worker-dispatch.js ***!\\n  \\\\*****************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\nconst SharedDispatch = __webpack_require__(/*! ./shared-dispatch */ \\\"./node_modules/scratch-vm/src/dispatch/shared-dispatch.js\\\");\\n\\nconst log = __webpack_require__(/*! ../util/log */ \\\"./node_modules/scratch-vm/src/util/log.js\\\");\\n\\nconst {\\n  centralDispatchService\\n} = __webpack_require__(/*! ../extension-support/tw-extension-worker-context */ \\\"./node_modules/scratch-vm/src/extension-support/tw-extension-worker-context.js\\\");\\n/**\\n * This class provides a Worker with the means to participate in the message dispatch system managed by CentralDispatch.\\n * From any context in the messaging system, the dispatcher's \\\"call\\\" method can call any method on any \\\"service\\\"\\n * provided in any participating context. The dispatch system will forward function arguments and return values across\\n * worker boundaries as needed.\\n * @see {CentralDispatch}\\n */\\n\\n\\nclass WorkerDispatch extends SharedDispatch {\\n  constructor() {\\n    super();\\n    /**\\n     * This promise will be resolved when we have successfully connected to central dispatch.\\n     * @type {Promise}\\n     * @see {waitForConnection}\\n     * @private\\n     */\\n\\n    this._connectionPromise = new Promise(resolve => {\\n      this._onConnect = resolve;\\n    });\\n    /**\\n     * Map of service name to local service provider.\\n     * If a service is not listed here, it is assumed to be provided by another context (another Worker or the main\\n     * thread).\\n     * @see {setService}\\n     * @type {object}\\n     */\\n\\n    this.services = {};\\n    this._onMessage = this._onMessage.bind(this, centralDispatchService);\\n\\n    if (typeof self !== 'undefined') {\\n      self.onmessage = this._onMessage;\\n    }\\n  }\\n  /**\\n   * @returns {Promise} a promise which will resolve upon connection to central dispatch. If you need to make a call\\n   * immediately on \\\"startup\\\" you can attach a 'then' to this promise.\\n   * @example\\n   *      dispatch.waitForConnection.then(() => {\\n   *          dispatch.call('myService', 'hello');\\n   *      })\\n   */\\n\\n\\n  get waitForConnection() {\\n    return this._connectionPromise;\\n  }\\n  /**\\n   * Set a local object as the global provider of the specified service.\\n   * WARNING: Any method on the provider can be called from any worker within the dispatch system.\\n   * @param {string} service - a globally unique string identifying this service. Examples: 'vm', 'gui', 'extension9'.\\n   * @param {object} provider - a local object which provides this service.\\n   * @returns {Promise} - a promise which will resolve once the service is registered.\\n   */\\n\\n\\n  setService(service, provider) {\\n    if (this.services.hasOwnProperty(service)) {\\n      log.warn(\\\"Worker dispatch replacing existing service provider for \\\".concat(service));\\n    }\\n\\n    this.services[service] = provider;\\n    return this.waitForConnection.then(() => this._remoteCall(centralDispatchService, 'dispatch', 'setService', service));\\n  }\\n  /**\\n   * Fetch the service provider object for a particular service name.\\n   * @override\\n   * @param {string} service - the name of the service to look up\\n   * @returns {{provider:(object|Worker), isRemote:boolean}} - the means to contact the service, if found\\n   * @protected\\n   */\\n\\n\\n  _getServiceProvider(service) {\\n    // if we don't have a local service by this name, contact central dispatch by calling `postMessage` on self\\n    const provider = this.services[service];\\n    return {\\n      provider: provider || centralDispatchService,\\n      isRemote: !provider\\n    };\\n  }\\n  /**\\n   * Handle a call message sent to the dispatch service itself\\n   * @override\\n   * @param {Worker} worker - the worker which sent the message.\\n   * @param {DispatchCallMessage} message - the message to be handled.\\n   * @returns {Promise|undefined} - a promise for the results of this operation, if appropriate\\n   * @protected\\n   */\\n\\n\\n  _onDispatchMessage(worker, message) {\\n    let promise;\\n\\n    switch (message.method) {\\n      case 'handshake':\\n        promise = this._onConnect();\\n        break;\\n\\n      case 'terminate':\\n        // Don't close until next tick, after sending confirmation back\\n        setTimeout(() => self.close(), 0);\\n        promise = Promise.resolve();\\n        break;\\n\\n      default:\\n        log.error(\\\"Worker dispatch received message for unknown method: \\\".concat(message.method));\\n    }\\n\\n    return promise;\\n  }\\n\\n}\\n\\nmodule.exports = new WorkerDispatch();\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/scratch-vm/src/extension-support/argument-type.js\\\":\\n/*!************************************************************************!*\\\\\\n  !*** ./node_modules/scratch-vm/src/extension-support/argument-type.js ***!\\n  \\\\************************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\n/**\\n * Block argument types\\n * @enum {string}\\n */\\nconst ArgumentType = {\\n  /**\\n   * Numeric value with angle picker\\n   */\\n  ANGLE: 'angle',\\n\\n  /**\\n   * Boolean value with hexagonal placeholder\\n   */\\n  BOOLEAN: 'Boolean',\\n\\n  /**\\n   * Numeric value with color picker\\n   */\\n  COLOR: 'color',\\n\\n  /**\\n   * Numeric value with text field\\n   */\\n  NUMBER: 'number',\\n\\n  /**\\n   * String value with text field\\n   */\\n  STRING: 'string',\\n\\n  /**\\n   * String value with matrix field\\n   */\\n  MATRIX: 'matrix',\\n\\n  /**\\n   * MIDI note number with note picker (piano) field\\n   */\\n  NOTE: 'note',\\n\\n  /**\\n   * Inline image on block (as part of the label)\\n   */\\n  IMAGE: 'image'\\n};\\nmodule.exports = ArgumentType;\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/scratch-vm/src/extension-support/block-type.js\\\":\\n/*!*********************************************************************!*\\\\\\n  !*** ./node_modules/scratch-vm/src/extension-support/block-type.js ***!\\n  \\\\*********************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\n/**\\n * Types of block\\n * @enum {string}\\n */\\nconst BlockType = {\\n  /**\\n   * Boolean reporter with hexagonal shape\\n   */\\n  BOOLEAN: 'Boolean',\\n\\n  /**\\n   * A button (not an actual block) for some special action, like making a variable\\n   */\\n  BUTTON: 'button',\\n\\n  /**\\n   * Command block\\n   */\\n  COMMAND: 'command',\\n\\n  /**\\n   * Specialized command block which may or may not run a child branch\\n   * The thread continues with the next block whether or not a child branch ran.\\n   */\\n  CONDITIONAL: 'conditional',\\n\\n  /**\\n   * Specialized hat block with no implementation function\\n   * This stack only runs if the corresponding event is emitted by other code.\\n   */\\n  EVENT: 'event',\\n\\n  /**\\n   * Hat block which conditionally starts a block stack\\n   */\\n  HAT: 'hat',\\n\\n  /**\\n   * Specialized command block which may or may not run a child branch\\n   * If a child branch runs, the thread evaluates the loop block again.\\n   */\\n  LOOP: 'loop',\\n\\n  /**\\n   * General reporter with numeric or string value\\n   */\\n  REPORTER: 'reporter'\\n};\\nmodule.exports = BlockType;\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/scratch-vm/src/extension-support/extension-worker.js\\\":\\n/*!***************************************************************************!*\\\\\\n  !*** ./node_modules/scratch-vm/src/extension-support/extension-worker.js ***!\\n  \\\\***************************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n/* WEBPACK VAR INJECTION */(function(global) {/* eslint-env worker */\\nconst ScratchCommon = __webpack_require__(/*! ./tw-extension-api-common */ \\\"./node_modules/scratch-vm/src/extension-support/tw-extension-api-common.js\\\");\\n\\nconst dispatch = __webpack_require__(/*! ../dispatch/worker-dispatch */ \\\"./node_modules/scratch-vm/src/dispatch/worker-dispatch.js\\\");\\n\\nconst log = __webpack_require__(/*! ../util/log */ \\\"./node_modules/scratch-vm/src/util/log.js\\\");\\n\\nconst {\\n  isWorker\\n} = __webpack_require__(/*! ./tw-extension-worker-context */ \\\"./node_modules/scratch-vm/src/extension-support/tw-extension-worker-context.js\\\");\\n\\nconst loadScripts = url => {\\n  if (isWorker) {\\n    importScripts(url);\\n  } else {\\n    return new Promise((resolve, reject) => {\\n      const script = document.createElement('script');\\n\\n      script.onload = () => resolve();\\n\\n      script.onerror = () => {\\n        reject(new Error(\\\"Error in sandboxed script: \\\".concat(url, \\\". Check the console for more information.\\\")));\\n      };\\n\\n      script.src = url;\\n      document.body.appendChild(script);\\n    });\\n  }\\n};\\n\\nclass ExtensionWorker {\\n  constructor() {\\n    this.nextExtensionId = 0;\\n    this.initialRegistrations = [];\\n    this.firstRegistrationPromise = new Promise(resolve => {\\n      this.firstRegistrationCallback = resolve;\\n    });\\n    dispatch.waitForConnection.then(() => {\\n      dispatch.call('extensions', 'allocateWorker').then(async x => {\\n        const [id, extension] = x;\\n        this.workerId = id;\\n\\n        try {\\n          await loadScripts(extension);\\n          await this.firstRegistrationPromise;\\n          const initialRegistrations = this.initialRegistrations;\\n          this.initialRegistrations = null;\\n          Promise.all(initialRegistrations).then(() => dispatch.call('extensions', 'onWorkerInit', id));\\n        } catch (e) {\\n          log.error(e);\\n          dispatch.call('extensions', 'onWorkerInit', id, \\\"\\\".concat(e));\\n        }\\n      });\\n    });\\n    this.extensions = [];\\n  }\\n\\n  register(extensionObject) {\\n    const extensionId = this.nextExtensionId++;\\n    this.extensions.push(extensionObject);\\n    const serviceName = \\\"extension.\\\".concat(this.workerId, \\\".\\\").concat(extensionId);\\n    const promise = dispatch.setService(serviceName, extensionObject).then(() => dispatch.call('extensions', 'registerExtensionService', serviceName));\\n\\n    if (this.initialRegistrations) {\\n      this.firstRegistrationCallback();\\n      this.initialRegistrations.push(promise);\\n    }\\n\\n    return promise;\\n  }\\n\\n}\\n\\nglobal.Scratch = global.Scratch || {};\\nObject.assign(global.Scratch, ScratchCommon);\\n/**\\n * Expose only specific parts of the worker to extensions.\\n */\\n\\nconst extensionWorker = new ExtensionWorker();\\nglobal.Scratch.extensions = {\\n  register: extensionWorker.register.bind(extensionWorker)\\n};\\nglobal.ScratchExtensions = __webpack_require__(/*! ./tw-scratchx-compatibility-layer */ \\\"./node_modules/scratch-vm/src/extension-support/tw-scratchx-compatibility-layer.js\\\");\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \\\"./node_modules/webpack/buildin/global.js\\\")))\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/scratch-vm/src/extension-support/target-type.js\\\":\\n/*!**********************************************************************!*\\\\\\n  !*** ./node_modules/scratch-vm/src/extension-support/target-type.js ***!\\n  \\\\**********************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\n/**\\n * Default types of Target supported by the VM\\n * @enum {string}\\n */\\nconst TargetType = {\\n  /**\\n   * Rendered target which can move, change costumes, etc.\\n   */\\n  SPRITE: 'sprite',\\n\\n  /**\\n   * Rendered target which cannot move but can change backdrops\\n   */\\n  STAGE: 'stage'\\n};\\nmodule.exports = TargetType;\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/scratch-vm/src/extension-support/tw-extension-api-common.js\\\":\\n/*!**********************************************************************************!*\\\\\\n  !*** ./node_modules/scratch-vm/src/extension-support/tw-extension-api-common.js ***!\\n  \\\\**********************************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\nconst ArgumentType = __webpack_require__(/*! ./argument-type */ \\\"./node_modules/scratch-vm/src/extension-support/argument-type.js\\\");\\n\\nconst BlockType = __webpack_require__(/*! ./block-type */ \\\"./node_modules/scratch-vm/src/extension-support/block-type.js\\\");\\n\\nconst TargetType = __webpack_require__(/*! ./target-type */ \\\"./node_modules/scratch-vm/src/extension-support/target-type.js\\\");\\n\\nconst Cast = __webpack_require__(/*! ../util/cast */ \\\"./node_modules/scratch-vm/src/util/cast.js\\\");\\n\\nconst Scratch = {\\n  ArgumentType,\\n  BlockType,\\n  TargetType,\\n  Cast\\n};\\nmodule.exports = Scratch;\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/scratch-vm/src/extension-support/tw-extension-worker-context.js\\\":\\n/*!**************************************************************************************!*\\\\\\n  !*** ./node_modules/scratch-vm/src/extension-support/tw-extension-worker-context.js ***!\\n  \\\\**************************************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\nmodule.exports = {\\n  isWorker: true,\\n  // centralDispatchService is the object to call postMessage() on to send a message to parent.\\n  centralDispatchService: self\\n};\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/scratch-vm/src/extension-support/tw-jquery-shim.js\\\":\\n/*!*************************************************************************!*\\\\\\n  !*** ./node_modules/scratch-vm/src/extension-support/tw-jquery-shim.js ***!\\n  \\\\*************************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n/* WEBPACK VAR INJECTION */(function(global) {/**\\n * @fileoverview\\n * Many ScratchX extensions require jQuery to do things like loading scripts and making requests.\\n * The real jQuery is pretty large and we'd rather not bring in everything, so this file reimplements\\n * small stubs of a few jQuery methods.\\n * It's just supposed to be enough to make existing ScratchX extensions work, nothing more.\\n */\\nconst log = __webpack_require__(/*! ../util/log */ \\\"./node_modules/scratch-vm/src/util/log.js\\\");\\n\\nconst jQuery = () => {\\n  throw new Error('Not implemented');\\n};\\n\\njQuery.getScript = (src, callback) => {\\n  const script = document.createElement('script');\\n  script.src = src;\\n\\n  if (callback) {\\n    // We don't implement callback arguments.\\n    script.onload = () => callback();\\n  }\\n\\n  document.body.appendChild(script);\\n};\\n/**\\n * @param {Record<string, any>|undefined} obj\\n * @returns {URLSearchParams}\\n */\\n\\n\\nconst objectToQueryString = obj => {\\n  const params = new URLSearchParams();\\n\\n  if (obj) {\\n    for (const key of Object.keys(obj)) {\\n      params.set(key, obj[key]);\\n    }\\n  }\\n\\n  return params;\\n};\\n\\nlet jsonpCallback = 0;\\n\\njQuery.ajax = async (arg1, arg2) => {\\n  let options = {};\\n\\n  if (arg1 && arg2) {\\n    options = arg2;\\n    options.url = arg1;\\n  } else if (arg1) {\\n    options = arg1;\\n  }\\n\\n  const urlParameters = objectToQueryString(options.data);\\n\\n  const getFinalURL = () => {\\n    const query = urlParameters.toString();\\n    let url = options.url;\\n\\n    if (query) {\\n      url += \\\"?\\\".concat(query);\\n    } // Forcibly upgrade all HTTP requests to HTTPS so that they don't error on HTTPS sites\\n    // All the extensions we care about work fine with this\\n\\n\\n    if (url.startsWith('http://')) {\\n      url = url.replace('http://', 'https://');\\n    }\\n\\n    return url;\\n  };\\n\\n  const successCallback = result => {\\n    if (options.success) {\\n      options.success(result);\\n    }\\n  };\\n\\n  const errorCallback = error => {\\n    log.error(error);\\n\\n    if (options.error) {\\n      // The error object we provide here might not match what jQuery provides but it's enough to\\n      // prevent extensions from throwing errors trying to access properties.\\n      options.error(error);\\n    }\\n  };\\n\\n  try {\\n    if (options.dataType === 'jsonp') {\\n      const callbackName = \\\"_jsonp_callback\\\".concat(jsonpCallback++);\\n\\n      global[callbackName] = data => {\\n        delete global[callbackName];\\n        successCallback(data);\\n      };\\n\\n      const callbackParameterName = options.jsonp || 'callback';\\n      urlParameters.set(callbackParameterName, callbackName);\\n      jQuery.getScript(getFinalURL());\\n      return;\\n    }\\n\\n    if (options.dataType === 'script') {\\n      jQuery.getScript(getFinalURL(), successCallback);\\n      return;\\n    }\\n\\n    const res = await fetch(getFinalURL(), {\\n      headers: options.headers\\n    }); // dataType defaults to \\\"Intelligent Guess (xml, json, script, or html)\\\"\\n    // It happens that all the ScratchX extensions we care about either set dataType to \\\"json\\\" or\\n    // leave it blank and implicitly request JSON, so this works good enough for now.\\n\\n    successCallback(await res.json());\\n  } catch (e) {\\n    errorCallback(e);\\n  }\\n};\\n\\nmodule.exports = jQuery;\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \\\"./node_modules/webpack/buildin/global.js\\\")))\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/scratch-vm/src/extension-support/tw-scratchx-compatibility-layer.js\\\":\\n/*!******************************************************************************************!*\\\\\\n  !*** ./node_modules/scratch-vm/src/extension-support/tw-scratchx-compatibility-layer.js ***!\\n  \\\\******************************************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n// ScratchX API Documentation: https://github.com/LLK/scratchx/wiki/\\n// Global Scratch API from extension-worker.js\\n\\n/* globals Scratch */\\nconst ArgumentType = __webpack_require__(/*! ./argument-type */ \\\"./node_modules/scratch-vm/src/extension-support/argument-type.js\\\");\\n\\nconst BlockType = __webpack_require__(/*! ./block-type */ \\\"./node_modules/scratch-vm/src/extension-support/block-type.js\\\");\\n\\nconst {\\n  argumentIndexToId,\\n  generateExtensionId\\n} = __webpack_require__(/*! ./tw-scratchx-utilities */ \\\"./node_modules/scratch-vm/src/extension-support/tw-scratchx-utilities.js\\\");\\n/**\\n * @typedef ScratchXDescriptor\\n * @property {unknown[][]} blocks\\n * @property {Record<string, unknown[]>} [menus]\\n * @property {string} [url]\\n * @property {string} [displayName]\\n */\\n\\n/**\\n * @typedef ScratchXStatus\\n * @property {0|1|2} status 0 is red/error, 1 is yellow/not ready, 2 is green/ready\\n * @property {string} msg\\n */\\n\\n\\nconst parseScratchXBlockType = type => {\\n  if (type === '' || type === ' ' || type === 'w') {\\n    return {\\n      type: BlockType.COMMAND,\\n      async: type === 'w'\\n    };\\n  }\\n\\n  if (type === 'r' || type === 'R') {\\n    return {\\n      type: BlockType.REPORTER,\\n      async: type === 'R'\\n    };\\n  }\\n\\n  if (type === 'b') {\\n    return {\\n      type: BlockType.BOOLEAN,\\n      // ScratchX docs don't seem to mention boolean reporters that wait\\n      async: false\\n    };\\n  }\\n\\n  if (type === 'h') {\\n    return {\\n      type: BlockType.HAT,\\n      async: false\\n    };\\n  }\\n\\n  throw new Error(\\\"Unknown ScratchX block type: \\\".concat(type));\\n};\\n\\nconst isScratchCompatibleValue = v => typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean';\\n/**\\n * @param {string} argument ScratchX argument with leading % removed.\\n * @param {unknown} defaultValue Default value, if any\\n */\\n\\n\\nconst parseScratchXArgument = (argument, defaultValue) => {\\n  const result = {};\\n  const hasDefaultValue = isScratchCompatibleValue(defaultValue);\\n\\n  if (hasDefaultValue) {\\n    result.defaultValue = defaultValue;\\n  } // TODO: ScratchX docs don't mention support for boolean arguments?\\n\\n\\n  if (argument === 's') {\\n    result.type = ArgumentType.STRING;\\n\\n    if (!hasDefaultValue) {\\n      result.defaultValue = '';\\n    }\\n  } else if (argument === 'n') {\\n    result.type = ArgumentType.NUMBER;\\n\\n    if (!hasDefaultValue) {\\n      result.defaultValue = 0;\\n    }\\n  } else if (argument[0] === 'm') {\\n    result.type = ArgumentType.STRING;\\n    const split = argument.split(/\\\\.|:/);\\n    const menuName = split[1];\\n    result.menu = menuName;\\n  } else {\\n    throw new Error(\\\"Unknown ScratchX argument type: \\\".concat(argument));\\n  }\\n\\n  return result;\\n};\\n\\nconst wrapScratchXFunction = (originalFunction, argumentCount, async) => args => {\\n  // Convert Scratch 3's argument object to an argument list expected by ScratchX\\n  const argumentList = [];\\n\\n  for (let i = 0; i < argumentCount; i++) {\\n    argumentList.push(args[argumentIndexToId(i)]);\\n  }\\n\\n  if (async) {\\n    return new Promise(resolve => {\\n      originalFunction(...argumentList, resolve);\\n    });\\n  }\\n\\n  return originalFunction(...argumentList);\\n};\\n/**\\n * @param {string} name\\n * @param {ScratchXDescriptor} descriptor\\n * @param {Record<string, () => unknown>} functions\\n */\\n\\n\\nconst convert = (name, descriptor, functions) => {\\n  const extensionId = generateExtensionId(name);\\n  const info = {\\n    id: extensionId,\\n    name: descriptor.displayName || name,\\n    blocks: [],\\n    color1: '#4a4a5e',\\n    color2: '#31323f',\\n    color3: '#191a21'\\n  };\\n  const scratch3Extension = {\\n    getInfo: () => info,\\n    _getStatus: functions._getStatus\\n  };\\n\\n  if (descriptor.url) {\\n    info.docsURI = descriptor.url;\\n  }\\n\\n  for (const blockDescriptor of descriptor.blocks) {\\n    if (blockDescriptor.length === 1) {\\n      // Separator\\n      info.blocks.push('---');\\n      continue;\\n    }\\n\\n    const scratchXBlockType = blockDescriptor[0];\\n    const blockText = blockDescriptor[1];\\n    const functionName = blockDescriptor[2];\\n    const defaultArgumentValues = blockDescriptor.slice(3);\\n    let scratchText = '';\\n    const argumentInfo = [];\\n    const blockTextParts = blockText.split(/%([\\\\w.:]+)/g);\\n\\n    for (let i = 0; i < blockTextParts.length; i++) {\\n      const part = blockTextParts[i];\\n      const isArgument = i % 2 === 1;\\n\\n      if (isArgument) {\\n        parseScratchXArgument(part);\\n        const argumentIndex = Math.floor(i / 2).toString();\\n        const argumentDefaultValue = defaultArgumentValues[argumentIndex];\\n        const argumentId = argumentIndexToId(argumentIndex);\\n        argumentInfo[argumentId] = parseScratchXArgument(part, argumentDefaultValue);\\n        scratchText += \\\"[\\\".concat(argumentId, \\\"]\\\");\\n      } else {\\n        scratchText += part;\\n      }\\n    }\\n\\n    const scratch3BlockType = parseScratchXBlockType(scratchXBlockType);\\n    const blockInfo = {\\n      opcode: functionName,\\n      blockType: scratch3BlockType.type,\\n      text: scratchText,\\n      arguments: argumentInfo\\n    };\\n    info.blocks.push(blockInfo);\\n    const originalFunction = functions[functionName];\\n    const argumentCount = argumentInfo.length;\\n    scratch3Extension[functionName] = wrapScratchXFunction(originalFunction, argumentCount, scratch3BlockType.async);\\n  }\\n\\n  const menus = descriptor.menus;\\n\\n  if (menus) {\\n    const scratch3Menus = {};\\n\\n    for (const menuName of Object.keys(menus) || {}) {\\n      const menuItems = menus[menuName];\\n      const menuInfo = {\\n        items: menuItems\\n      };\\n      scratch3Menus[menuName] = menuInfo;\\n    }\\n\\n    info.menus = scratch3Menus;\\n  }\\n\\n  return scratch3Extension;\\n};\\n\\nconst extensionNameToExtension = new Map();\\n\\nconst register = (name, descriptor, functions) => {\\n  const scratch3Extension = convert(name, descriptor, functions);\\n  extensionNameToExtension.set(name, scratch3Extension);\\n  Scratch.extensions.register(scratch3Extension);\\n};\\n/**\\n * @param {string} extensionName\\n * @returns {ScratchXStatus}\\n */\\n\\n\\nconst getStatus = extensionName => {\\n  const extension = extensionNameToExtension.get(extensionName);\\n\\n  if (extension) {\\n    return extension._getStatus();\\n  }\\n\\n  return {\\n    status: 0,\\n    msg: 'does not exist'\\n  };\\n};\\n\\nmodule.exports = {\\n  register,\\n  getStatus,\\n  // For tests\\n  convert\\n};\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/scratch-vm/src/extension-support/tw-scratchx-utilities.js\\\":\\n/*!********************************************************************************!*\\\\\\n  !*** ./node_modules/scratch-vm/src/extension-support/tw-scratchx-utilities.js ***!\\n  \\\\********************************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\n/**\\n * @fileoverview\\n * General ScratchX-related utilities used in multiple places.\\n * Changing these functions may break projects.\\n */\\n\\n/**\\n * @param {string} scratchXName\\n * @returns {string}\\n */\\nconst generateExtensionId = scratchXName => {\\n  const sanitizedName = scratchXName.replace(/[^a-z0-9]/gi, '').toLowerCase();\\n  return \\\"sbx\\\".concat(sanitizedName);\\n};\\n/**\\n * @param {number} i 0-indexed index of argument in list\\n * @returns {string} Scratch 3 argument name\\n */\\n\\n\\nconst argumentIndexToId = i => i.toString();\\n\\nmodule.exports = {\\n  generateExtensionId,\\n  argumentIndexToId\\n};\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/scratch-vm/src/util/cast.js\\\":\\n/*!**************************************************!*\\\\\\n  !*** ./node_modules/scratch-vm/src/util/cast.js ***!\\n  \\\\**************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\nconst Color = __webpack_require__(/*! ../util/color */ \\\"./node_modules/scratch-vm/src/util/color.js\\\");\\n/**\\n * @fileoverview\\n * Utilities for casting and comparing Scratch data-types.\\n * Scratch behaves slightly differently from JavaScript in many respects,\\n * and these differences should be encapsulated below.\\n * For example, in Scratch, add(1, join(\\\"hello\\\", world\\\")) -> 1.\\n * This is because \\\"hello world\\\" is cast to 0.\\n * In JavaScript, 1 + Number(\\\"hello\\\" + \\\"world\\\") would give you NaN.\\n * Use when coercing a value before computation.\\n */\\n\\n\\nclass Cast {\\n  /**\\n   * Scratch cast to number.\\n   * Treats NaN as 0.\\n   * In Scratch 2.0, this is captured by `interp.numArg.`\\n   * @param {*} value Value to cast to number.\\n   * @return {number} The Scratch-casted number value.\\n   */\\n  static toNumber(value) {\\n    // If value is already a number we don't need to coerce it with\\n    // Number().\\n    if (typeof value === 'number') {\\n      // Scratch treats NaN as 0, when needed as a number.\\n      // E.g., 0 + NaN -> 0.\\n      if (Number.isNaN(value)) {\\n        return 0;\\n      }\\n\\n      return value;\\n    }\\n\\n    const n = Number(value);\\n\\n    if (Number.isNaN(n)) {\\n      // Scratch treats NaN as 0, when needed as a number.\\n      // E.g., 0 + NaN -> 0.\\n      return 0;\\n    }\\n\\n    return n;\\n  }\\n  /**\\n   * Scratch cast to boolean.\\n   * In Scratch 2.0, this is captured by `interp.boolArg.`\\n   * Treats some string values differently from JavaScript.\\n   * @param {*} value Value to cast to boolean.\\n   * @return {boolean} The Scratch-casted boolean value.\\n   */\\n\\n\\n  static toBoolean(value) {\\n    // Already a boolean?\\n    if (typeof value === 'boolean') {\\n      return value;\\n    }\\n\\n    if (typeof value === 'string') {\\n      // These specific strings are treated as false in Scratch.\\n      if (value === '' || value === '0' || value.toLowerCase() === 'false') {\\n        return false;\\n      } // All other strings treated as true.\\n\\n\\n      return true;\\n    } // Coerce other values and numbers.\\n\\n\\n    return Boolean(value);\\n  }\\n  /**\\n   * Scratch cast to string.\\n   * @param {*} value Value to cast to string.\\n   * @return {string} The Scratch-casted string value.\\n   */\\n\\n\\n  static toString(value) {\\n    return String(value);\\n  }\\n  /**\\n   * Cast any Scratch argument to an RGB color array to be used for the renderer.\\n   * @param {*} value Value to convert to RGB color array.\\n   * @return {Array.<number>} [r,g,b], values between 0-255.\\n   */\\n\\n\\n  static toRgbColorList(value) {\\n    const color = Cast.toRgbColorObject(value);\\n    return [color.r, color.g, color.b];\\n  }\\n  /**\\n   * Cast any Scratch argument to an RGB color object to be used for the renderer.\\n   * @param {*} value Value to convert to RGB color object.\\n   * @return {RGBOject} [r,g,b], values between 0-255.\\n   */\\n\\n\\n  static toRgbColorObject(value) {\\n    let color;\\n\\n    if (typeof value === 'string' && value.substring(0, 1) === '#') {\\n      color = Color.hexToRgb(value); // If the color wasn't *actually* a hex color, cast to black\\n\\n      if (!color) color = {\\n        r: 0,\\n        g: 0,\\n        b: 0,\\n        a: 255\\n      };\\n    } else {\\n      color = Color.decimalToRgb(Cast.toNumber(value));\\n    }\\n\\n    return color;\\n  }\\n  /**\\n   * Determine if a Scratch argument is a white space string (or null / empty).\\n   * @param {*} val value to check.\\n   * @return {boolean} True if the argument is all white spaces or null / empty.\\n   */\\n\\n\\n  static isWhiteSpace(val) {\\n    return val === null || typeof val === 'string' && val.trim().length === 0;\\n  }\\n  /**\\n   * Compare two values, using Scratch cast, case-insensitive string compare, etc.\\n   * In Scratch 2.0, this is captured by `interp.compare.`\\n   * @param {*} v1 First value to compare.\\n   * @param {*} v2 Second value to compare.\\n   * @returns {number} Negative number if v1 < v2; 0 if equal; positive otherwise.\\n   */\\n\\n\\n  static compare(v1, v2) {\\n    let n1 = Number(v1);\\n    let n2 = Number(v2);\\n\\n    if (n1 === 0 && Cast.isWhiteSpace(v1)) {\\n      n1 = NaN;\\n    } else if (n2 === 0 && Cast.isWhiteSpace(v2)) {\\n      n2 = NaN;\\n    }\\n\\n    if (isNaN(n1) || isNaN(n2)) {\\n      // At least one argument can't be converted to a number.\\n      // Scratch compares strings as case insensitive.\\n      const s1 = String(v1).toLowerCase();\\n      const s2 = String(v2).toLowerCase();\\n\\n      if (s1 < s2) {\\n        return -1;\\n      } else if (s1 > s2) {\\n        return 1;\\n      }\\n\\n      return 0;\\n    } // Handle the special case of Infinity\\n\\n\\n    if (n1 === Infinity && n2 === Infinity || n1 === -Infinity && n2 === -Infinity) {\\n      return 0;\\n    } // Compare as numbers.\\n\\n\\n    return n1 - n2;\\n  }\\n  /**\\n   * Determine if a Scratch argument number represents a round integer.\\n   * @param {*} val Value to check.\\n   * @return {boolean} True if number looks like an integer.\\n   */\\n\\n\\n  static isInt(val) {\\n    // Values that are already numbers.\\n    if (typeof val === 'number') {\\n      if (isNaN(val)) {\\n        // NaN is considered an integer.\\n        return true;\\n      } // True if it's \\\"round\\\" (e.g., 2.0 and 2).\\n\\n\\n      return val === Math.floor(val);\\n    } else if (typeof val === 'boolean') {\\n      // `True` and `false` always represent integer after Scratch cast.\\n      return true;\\n    } else if (typeof val === 'string') {\\n      // If it contains a decimal point, don't consider it an int.\\n      return val.indexOf('.') < 0;\\n    }\\n\\n    return false;\\n  }\\n\\n  static get LIST_INVALID() {\\n    return 'INVALID';\\n  }\\n\\n  static get LIST_ALL() {\\n    return 'ALL';\\n  }\\n  /**\\n   * Compute a 1-based index into a list, based on a Scratch argument.\\n   * Two special cases may be returned:\\n   * LIST_ALL: if the block is referring to all of the items in the list.\\n   * LIST_INVALID: if the index was invalid in any way.\\n   * @param {*} index Scratch arg, including 1-based numbers or special cases.\\n   * @param {number} length Length of the list.\\n   * @param {boolean} acceptAll Whether it should accept \\\"all\\\" or not.\\n   * @return {(number|string)} 1-based index for list, LIST_ALL, or LIST_INVALID.\\n   */\\n\\n\\n  static toListIndex(index, length, acceptAll) {\\n    if (typeof index !== 'number') {\\n      if (index === 'all') {\\n        return acceptAll ? Cast.LIST_ALL : Cast.LIST_INVALID;\\n      }\\n\\n      if (index === 'last') {\\n        if (length > 0) {\\n          return length;\\n        }\\n\\n        return Cast.LIST_INVALID;\\n      } else if (index === 'random' || index === 'any') {\\n        if (length > 0) {\\n          return 1 + Math.floor(Math.random() * length);\\n        }\\n\\n        return Cast.LIST_INVALID;\\n      }\\n    }\\n\\n    index = Math.floor(Cast.toNumber(index));\\n\\n    if (index < 1 || index > length) {\\n      return Cast.LIST_INVALID;\\n    }\\n\\n    return index;\\n  }\\n\\n}\\n\\nmodule.exports = Cast;\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/scratch-vm/src/util/color.js\\\":\\n/*!***************************************************!*\\\\\\n  !*** ./node_modules/scratch-vm/src/util/color.js ***!\\n  \\\\***************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\nclass Color {\\n  /**\\n   * @typedef {object} RGBObject - An object representing a color in RGB format.\\n   * @property {number} r - the red component, in the range [0, 255].\\n   * @property {number} g - the green component, in the range [0, 255].\\n   * @property {number} b - the blue component, in the range [0, 255].\\n   */\\n\\n  /**\\n   * @typedef {object} HSVObject - An object representing a color in HSV format.\\n   * @property {number} h - hue, in the range [0-359).\\n   * @property {number} s - saturation, in the range [0,1].\\n   * @property {number} v - value, in the range [0,1].\\n   */\\n\\n  /** @type {RGBObject} */\\n  static get RGB_BLACK() {\\n    return {\\n      r: 0,\\n      g: 0,\\n      b: 0\\n    };\\n  }\\n  /** @type {RGBObject} */\\n\\n\\n  static get RGB_WHITE() {\\n    return {\\n      r: 255,\\n      g: 255,\\n      b: 255\\n    };\\n  }\\n  /**\\n   * Convert a Scratch decimal color to a hex string, #RRGGBB.\\n   * @param {number} decimal RGB color as a decimal.\\n   * @return {string} RGB color as #RRGGBB hex string.\\n   */\\n\\n\\n  static decimalToHex(decimal) {\\n    if (decimal < 0) {\\n      decimal += 0xFFFFFF + 1;\\n    }\\n\\n    let hex = Number(decimal).toString(16);\\n    hex = \\\"#\\\".concat('000000'.substr(0, 6 - hex.length)).concat(hex);\\n    return hex;\\n  }\\n  /**\\n   * Convert a Scratch decimal color to an RGB color object.\\n   * @param {number} decimal RGB color as decimal.\\n   * @return {RGBObject} rgb - {r: red [0,255], g: green [0,255], b: blue [0,255]}.\\n   */\\n\\n\\n  static decimalToRgb(decimal) {\\n    const a = decimal >> 24 & 0xFF;\\n    const r = decimal >> 16 & 0xFF;\\n    const g = decimal >> 8 & 0xFF;\\n    const b = decimal & 0xFF;\\n    return {\\n      r: r,\\n      g: g,\\n      b: b,\\n      a: a > 0 ? a : 255\\n    };\\n  }\\n  /**\\n   * Convert a hex color (e.g., F00, #03F, #0033FF) to an RGB color object.\\n   * @param {!string} hex Hex representation of the color.\\n   * @return {RGBObject} null on failure, or rgb: {r: red [0,255], g: green [0,255], b: blue [0,255]}.\\n   */\\n\\n\\n  static hexToRgb(hex) {\\n    if (hex.startsWith('#')) {\\n      hex = hex.substring(1);\\n    }\\n\\n    const parsed = parseInt(hex, 16);\\n\\n    if (isNaN(parsed)) {\\n      return null;\\n    }\\n\\n    if (hex.length === 6) {\\n      return {\\n        r: parsed >> 16 & 0xff,\\n        g: parsed >> 8 & 0xff,\\n        b: parsed & 0xff\\n      };\\n    } else if (hex.length === 3) {\\n      const r = parsed >> 8 & 0xf;\\n      const g = parsed >> 4 & 0xf;\\n      const b = parsed & 0xf;\\n      return {\\n        r: r << 4 | r,\\n        g: g << 4 | g,\\n        b: b << 4 | b\\n      };\\n    }\\n\\n    return null;\\n  }\\n  /**\\n   * Convert an RGB color object to a hex color.\\n   * @param {RGBObject} rgb - {r: red [0,255], g: green [0,255], b: blue [0,255]}.\\n   * @return {!string} Hex representation of the color.\\n   */\\n\\n\\n  static rgbToHex(rgb) {\\n    return Color.decimalToHex(Color.rgbToDecimal(rgb));\\n  }\\n  /**\\n   * Convert an RGB color object to a Scratch decimal color.\\n   * @param {RGBObject} rgb - {r: red [0,255], g: green [0,255], b: blue [0,255]}.\\n   * @return {!number} Number representing the color.\\n   */\\n\\n\\n  static rgbToDecimal(rgb) {\\n    return (rgb.r << 16) + (rgb.g << 8) + rgb.b;\\n  }\\n  /**\\n  * Convert a hex color (e.g., F00, #03F, #0033FF) to a decimal color number.\\n  * @param {!string} hex Hex representation of the color.\\n  * @return {!number} Number representing the color.\\n  */\\n\\n\\n  static hexToDecimal(hex) {\\n    return Color.rgbToDecimal(Color.hexToRgb(hex));\\n  }\\n  /**\\n   * Convert an HSV color to RGB format.\\n   * @param {HSVObject} hsv - {h: hue [0,360), s: saturation [0,1], v: value [0,1]}\\n   * @return {RGBObject} rgb - {r: red [0,255], g: green [0,255], b: blue [0,255]}.\\n   */\\n\\n\\n  static hsvToRgb(hsv) {\\n    let h = hsv.h % 360;\\n    if (h < 0) h += 360;\\n    const s = Math.max(0, Math.min(hsv.s, 1));\\n    const v = Math.max(0, Math.min(hsv.v, 1));\\n    const i = Math.floor(h / 60);\\n    const f = h / 60 - i;\\n    const p = v * (1 - s);\\n    const q = v * (1 - s * f);\\n    const t = v * (1 - s * (1 - f));\\n    let r;\\n    let g;\\n    let b;\\n\\n    switch (i) {\\n      default:\\n      case 0:\\n        r = v;\\n        g = t;\\n        b = p;\\n        break;\\n\\n      case 1:\\n        r = q;\\n        g = v;\\n        b = p;\\n        break;\\n\\n      case 2:\\n        r = p;\\n        g = v;\\n        b = t;\\n        break;\\n\\n      case 3:\\n        r = p;\\n        g = q;\\n        b = v;\\n        break;\\n\\n      case 4:\\n        r = t;\\n        g = p;\\n        b = v;\\n        break;\\n\\n      case 5:\\n        r = v;\\n        g = p;\\n        b = q;\\n        break;\\n    }\\n\\n    return {\\n      r: Math.floor(r * 255),\\n      g: Math.floor(g * 255),\\n      b: Math.floor(b * 255)\\n    };\\n  }\\n  /**\\n   * Convert an RGB color to HSV format.\\n   * @param {RGBObject} rgb - {r: red [0,255], g: green [0,255], b: blue [0,255]}.\\n   * @return {HSVObject} hsv - {h: hue [0,360), s: saturation [0,1], v: value [0,1]}\\n   */\\n\\n\\n  static rgbToHsv(rgb) {\\n    const r = rgb.r / 255;\\n    const g = rgb.g / 255;\\n    const b = rgb.b / 255;\\n    const x = Math.min(Math.min(r, g), b);\\n    const v = Math.max(Math.max(r, g), b); // For grays, hue will be arbitrarily reported as zero. Otherwise, calculate\\n\\n    let h = 0;\\n    let s = 0;\\n\\n    if (x !== v) {\\n      const f = r === x ? g - b : g === x ? b - r : r - g;\\n      const i = r === x ? 3 : g === x ? 5 : 1;\\n      h = (i - f / (v - x)) * 60 % 360;\\n      s = (v - x) / v;\\n    }\\n\\n    return {\\n      h: h,\\n      s: s,\\n      v: v\\n    };\\n  }\\n  /**\\n   * Linear interpolation between rgb0 and rgb1.\\n   * @param {RGBObject} rgb0 - the color corresponding to fraction1 <= 0.\\n   * @param {RGBObject} rgb1 - the color corresponding to fraction1 >= 1.\\n   * @param {number} fraction1 - the interpolation parameter. If this is 0.5, for example, mix the two colors equally.\\n   * @return {RGBObject} the interpolated color.\\n   */\\n\\n\\n  static mixRgb(rgb0, rgb1, fraction1) {\\n    if (fraction1 <= 0) return rgb0;\\n    if (fraction1 >= 1) return rgb1;\\n    const fraction0 = 1 - fraction1;\\n    return {\\n      r: fraction0 * rgb0.r + fraction1 * rgb1.r,\\n      g: fraction0 * rgb0.g + fraction1 * rgb1.g,\\n      b: fraction0 * rgb0.b + fraction1 * rgb1.b\\n    };\\n  }\\n\\n}\\n\\nmodule.exports = Color;\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/scratch-vm/src/util/log.js\\\":\\n/*!*************************************************!*\\\\\\n  !*** ./node_modules/scratch-vm/src/util/log.js ***!\\n  \\\\*************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\nconst minilog = __webpack_require__(/*! minilog */ \\\"./node_modules/minilog/lib/web/index.js\\\");\\n\\nminilog.enable();\\nmodule.exports = minilog('vm');\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/webpack/buildin/global.js\\\":\\n/*!***********************************!*\\\\\\n  !*** (webpack)/buildin/global.js ***!\\n  \\\\***********************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\nvar g;\\n\\n// This works in non-strict mode\\ng = (function() {\\n\\treturn this;\\n})();\\n\\ntry {\\n\\t// This works if eval is allowed (see CSP)\\n\\tg = g || new Function(\\\"return this\\\")();\\n} catch (e) {\\n\\t// This works if the window reference is available\\n\\tif (typeof window === \\\"object\\\") g = window;\\n}\\n\\n// g can still be undefined, but nothing to do about it...\\n// We return undefined, instead of nothing here, so it's\\n// easier to handle this case. if(!global) { ...}\\n\\nmodule.exports = g;\\n\\n\\n/***/ })\\n\\n/******/ });\\n//# sourceMappingURL=extension worker.js.map\";"],"sourceRoot":""}